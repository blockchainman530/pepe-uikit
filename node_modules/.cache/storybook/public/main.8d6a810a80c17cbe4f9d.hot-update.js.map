{"version":3,"file":"main.8d6a810a80c17cbe4f9d.hot-update.js","sources":["webpack:///./src/widgets/Menu/Menu.tsx","webpack:///./src/widgets/Menu/components/MenuEntry.tsx","webpack:///./src/widgets/Menu/index.stories.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport throttle from \"lodash/throttle\";\r\nimport Overlay from \"../../components/Overlay/Overlay\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport { useMatchBreakpoints } from \"../../hooks\";\r\nimport Logo from \"./components/Logo\";\r\nimport Panel from \"./components/Panel\";\r\nimport { NavProps } from \"./types\";\r\nimport { MENU_HEIGHT, SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"./config\";\r\nimport { LinkLabel, LinkStatus, MenuEntry } from \"./components/MenuEntry\";\r\nimport MenuLink from \"./components/MenuLink\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledNav = styled.nav<{ showMenu: boolean }>`\r\n  position: fixed;\r\n  top: ${({ showMenu }) => (showMenu ? 0 : `-${MENU_HEIGHT}px`)};\r\n  left: 0;\r\n  transition: top 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 8px;\r\n  padding-right: 16px;\r\n  width: 100%;\r\n  height: ${MENU_HEIGHT}px;\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  border-bottom: solid 2px rgba(133, 133, 133, 0.1);\r\n  z-index: 20;\r\n  transform: translate3d(0, 0, 0);\r\n`;\r\n\r\nconst BodyWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n`;\r\n\r\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean }>`\r\n  flex-grow: 1;\r\n  margin-top: ${({ showMenu }) => (showMenu ? `${MENU_HEIGHT}px` : 0)};\r\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\r\n  transform: translate3d(0, 0, 0);\r\n  max-width: 100%;\r\n\r\n  // ${({ theme }) => theme.mediaQueries.nav} {\r\n  //   margin-left: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\r\n  //   max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\r\n  // }\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    margin-left: 0;\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst MobileOnlyOverlay = styled(Overlay)`\r\n  position: fixed;\r\n  height: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Menu: React.FC<NavProps> = ({\r\n  userMenu,\r\n  globalMenu,\r\n  isDark,\r\n  toggleTheme,\r\n  langs,\r\n  setLang,\r\n  currentLang,\r\n  cakePriceUsd,\r\n  links,\r\n  children,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints();\r\n  const isSmallerScreen = isMobile || isTablet;\r\n  const [isPushed, setIsPushed] = useState(!isSmallerScreen);\r\n  const [showMenu, setShowMenu] = useState(true);\r\n  const refPrevOffset = useRef(window.pageYOffset);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentOffset = window.pageYOffset;\r\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight;\r\n      const isTopOfPage = currentOffset === 0;\r\n      // Always show the menu when user reach the top\r\n      if (isTopOfPage) {\r\n        setShowMenu(true);\r\n      }\r\n      // Avoid triggering anything at the bottom because of layout shift\r\n      else if (!isBottomOfPage) {\r\n        if (currentOffset < refPrevOffset.current) {\r\n          // Has scroll up\r\n          setShowMenu(true);\r\n        } else {\r\n          // Has scroll down\r\n          setShowMenu(false);\r\n        }\r\n      }\r\n      refPrevOffset.current = currentOffset;\r\n    };\r\n    const throttledHandleScroll = throttle(handleScroll, 200);\r\n\r\n    window.addEventListener(\"scroll\", throttledHandleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\r\n    };\r\n  }, []);\r\n\r\n  // Find the home link if provided\r\n  const homeLink = links.find((link) => link.label === \"Home\");\r\n  const location = useLocation();\r\n\r\n  // Close the menu when a user clicks a link on mobile\r\n  const handleClick = isMobile ? () => setIsPushed(false) : undefined;\r\n\r\n  return (  \r\n    <Wrapper>\r\n      <StyledNav showMenu={showMenu}>\r\n        <Logo\r\n          isPushed={isPushed}\r\n          togglePush={() => setIsPushed((prevState: boolean) => !prevState)}\r\n          isDark={isDark}\r\n          href={homeLink?.href ?? \"/\"}\r\n        />\r\n        {isPushed &&\r\n          links.map((item) => (\r\n            <MenuEntry key={item.href} secondary isActive={item.href === location.pathname} onClick={handleClick}>\r\n              <LinkLabel isPushed={isPushed}>{item.label}</LinkLabel>\r\n              {/* {item.status && (\r\n                <LinkStatus color={item.status.color} fontSize=\"14px\">\r\n                  {item.status.text}\r\n                </LinkStatus>\r\n              )}               */}\r\n            </MenuEntry>\r\n          ))\r\n        }\r\n        <Flex>\r\n          {globalMenu} {userMenu}\r\n        </Flex>\r\n      </StyledNav>\r\n      <BodyWrapper>\r\n        {/* <Panel\r\n          isPushed={isPushed}\r\n          isMobile={isSmallerScreen}\r\n          showMenu={showMenu}\r\n          isDark={isDark}\r\n          toggleTheme={toggleTheme}\r\n          langs={langs}\r\n          setLang={setLang}\r\n          currentLang={currentLang}\r\n          cakePriceUsd={cakePriceUsd}\r\n          pushNav={setIsPushed}\r\n          links={links}\r\n        /> */}\r\n        <Inner isPushed={isPushed} showMenu={showMenu}>\r\n          {children}\r\n        </Inner>\r\n        <MobileOnlyOverlay show={isPushed} onClick={() => setIsPushed(false)} role=\"presentation\" />\r\n      </BodyWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport styled, { keyframes, DefaultTheme } from \"styled-components\";\r\nimport { Text } from \"../../../components/Text\";\r\nimport { Colors } from \"../../../theme/types\";\r\nimport { MENU_ENTRY_HEIGHT } from \"../config\";\r\n\r\nexport interface Props {\r\n  secondary?: boolean;\r\n  isActive?: boolean;\r\n  theme: DefaultTheme;\r\n}\r\n\r\nconst rainbowAnimation = keyframes`\r\n  0%,\r\n  100% {\r\n    background-position: 0 0;\r\n  }\r\n  50% {\r\n    background-position: 100% 0;\r\n  }\r\n`;\r\n\r\nconst LinkLabel = styled.div<{ isPushed: boolean }>`\r\n  color: ${({ isPushed, theme }) => (isPushed ? theme.colors.textSubtle : \"transparent\")};\r\n  transition: color 0.4s;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst MenuEntry = styled.div<Props>`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: ${MENU_ENTRY_HEIGHT}px;\r\n  padding: ${({ secondary }) => (secondary ? \"0 32px\" : \"0 16px\")};\r\n  font-size: ${({ secondary }) => (secondary ? \"14px\" : \"16px\")};\r\n  background-color: ${({ secondary, theme }) => (secondary ? theme.colors.background : \"transparent\")};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  box-shadow: ${({ isActive, theme }) => (isActive ? `inset 4px 0px 0px ${theme.colors.primary}` : \"none\")};\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n\r\n  // Safari fix\r\n  flex-shrink: 0;\r\n\r\n  &.rainbow {\r\n    background-clip: text;\r\n    animation: ${rainbowAnimation} 3s ease-in-out infinite;\r\n    background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n    background-size: 400% 100%;\r\n  }\r\n`;\r\nMenuEntry.defaultProps = {\r\n  secondary: false,\r\n  isActive: false,\r\n};\r\n\r\nconst LinkStatus = styled(Text)<{ color: keyof Colors }>`\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  padding: 0 8px;\r\n  border: 2px solid;\r\n  border-color: ${({ theme, color }) => theme.colors[color]};\r\n  box-shadow: none;\r\n  color: ${({ theme, color }) => theme.colors[color]};\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst LinkLabelMemo = React.memo(LinkLabel, (prev, next) => prev.isPushed === next.isPushed);\r\n\r\nexport { MenuEntry, LinkStatus, LinkLabelMemo as LinkLabel };\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useEffect, useState } from \\\"react\\\";\\r\\nimport noop from \\\"lodash/noop\\\";\\r\\nimport { BrowserRouter, Link, MemoryRouter } from \\\"react-router-dom\\\";\\r\\nimport Flex from \\\"../../components/Box/Flex\\\";\\r\\nimport Box from \\\"../../components/Box/Box\\\";\\r\\nimport Heading from \\\"../../components/Heading/Heading\\\";\\r\\nimport Text from \\\"../../components/Text/Text\\\";\\r\\nimport Input from \\\"../../components/Input/Input\\\";\\r\\nimport Button from \\\"../../components/Button/Button\\\";\\r\\nimport { Language } from \\\"./types\\\";\\r\\nimport { links } from \\\"./config\\\";\\r\\nimport { MenuEntry } from \\\"./components/MenuEntry\\\";\\r\\nimport UserMenu from \\\"./components/UserMenu\\\";\\r\\nimport { UserMenuDivider, UserMenuItem } from \\\"./components/UserMenu/styles\\\";\\r\\nimport { variants, Variant } from \\\"./components/UserMenu/types\\\";\\r\\nimport Menu from \\\"./Menu\\\";\\r\\nimport { CogIcon, LanguageCurrencyIcon, LogoutIcon } from \\\"../../components/Svg\\\";\\r\\nimport IconButton from \\\"../../components/Button/IconButton\\\";\\r\\nimport { Modal, ModalProps, useModal } from \\\"../Modal\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Widgets/Menu\\\",\\r\\n  component: Menu,\\r\\n  argTypes: {},\\r\\n};\\r\\n\\r\\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\\r\\n  code: `en${i}`,\\r\\n  language: `English${i}`,\\r\\n  locale: `Locale${i}`,\\r\\n}));\\r\\n\\r\\nconst UserMenuComponent: React.FC<{ variant?: Variant; text?: string; account?: string }> = ({\\r\\n  variant = variants.DEFAULT,\\r\\n  text,\\r\\n  account = \\\"0x8b017905DC96B38f817473dc885F84D4C76bC113\\\",\\r\\n}) => (\\r\\n  <UserMenu variant={variant} text={text} account={account}>\\r\\n    <UserMenuItem type=\\\"button\\\" onClick={noop}>\\r\\n      Wallet\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem type=\\\"button\\\">Transactions</UserMenuItem>\\r\\n    <UserMenuDivider />\\r\\n    <UserMenuItem type=\\\"button\\\" disabled>\\r\\n      Dashboard\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem type=\\\"button\\\" disabled>\\r\\n      Portfolio\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem as={Link} to=\\\"/profile\\\">\\r\\n      React Router Link\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" target=\\\"_blank\\\">\\r\\n      Link\\r\\n    </UserMenuItem>\\r\\n    <UserMenuDivider />\\r\\n    <UserMenuItem as=\\\"button\\\" onClick={noop}>\\r\\n      <Flex alignItems=\\\"center\\\" justifyContent=\\\"space-between\\\" width=\\\"100%\\\">\\r\\n        Disconnect\\r\\n        <LogoutIcon />\\r\\n      </Flex>\\r\\n    </UserMenuItem>\\r\\n  </UserMenu>\\r\\n);\\r\\n\\r\\nconst GlobalMenuModal: React.FC<ModalProps> = ({ title, onDismiss, ...props }) => (\\r\\n  <Modal title={title} onDismiss={onDismiss} {...props}>\\r\\n    <Heading>{title}</Heading>\\r\\n    <Button>This button Does nothing</Button>\\r\\n  </Modal>\\r\\n);\\r\\n\\r\\nconst GlobalMenuComponent: React.FC = () => {\\r\\n  const [onPresent1] = useModal(<GlobalMenuModal title=\\\"Display Settings Modal\\\" />);\\r\\n  const [onPresent2] = useModal(<GlobalMenuModal title=\\\"Global Settings Modal\\\" />);\\r\\n\\r\\n  return (\\r\\n    <Flex>\\r\\n      <IconButton onClick={onPresent1} variant=\\\"text\\\" scale=\\\"sm\\\" mr=\\\"4px\\\">\\r\\n        <LanguageCurrencyIcon height={22} width={22} color=\\\"textSubtle\\\" />\\r\\n      </IconButton>\\r\\n      <IconButton onClick={onPresent2} variant=\\\"text\\\" scale=\\\"sm\\\" mr=\\\"8px\\\">\\r\\n        <CogIcon height={22} width={22} color=\\\"textSubtle\\\" />\\r\\n      </IconButton>\\r\\n    </Flex>\\r\\n  );\\r\\n};\\r\\n\\r\\n// This hook is used to simulate a props change, and force a re rendering\\r\\nconst useProps = () => {\\r\\n  const [props, setProps] = useState({\\r\\n    account: \\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\",\\r\\n    login: noop,\\r\\n    logout: noop,\\r\\n    isDark: false,\\r\\n    toggleTheme: noop,\\r\\n    langs,\\r\\n    setLang: noop,\\r\\n    currentLang: \\\"EN\\\",\\r\\n    cakePriceUsd: 0.023158668932877668,\\r\\n    links,\\r\\n    profile: null,\\r\\n    userMenu: <UserMenuComponent account=\\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\" />,\\r\\n    globalMenu: <GlobalMenuComponent />,\\r\\n  });\\r\\n\\r\\n  useEffect(() => {\\r\\n    const interval = setInterval(() => {\\r\\n      setProps({\\r\\n        account: \\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\",\\r\\n        login: noop,\\r\\n        logout: noop,\\r\\n        isDark: false,\\r\\n        toggleTheme: noop,\\r\\n        langs,\\r\\n        setLang: noop,\\r\\n        currentLang: \\\"EN\\\",\\r\\n        cakePriceUsd: 0.023158668932877668,\\r\\n        links,\\r\\n        profile: null,\\r\\n        userMenu: <UserMenuComponent account=\\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\" />,\\r\\n        globalMenu: <GlobalMenuComponent />,\\r\\n      });\\r\\n    }, 2000);\\r\\n    return () => {\\r\\n      clearInterval(interval);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  return props;\\r\\n};\\r\\n\\r\\nexport const Connected: React.FC = () => {\\r\\n  const props = useProps();\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu {...props}>\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Page body\\r\\n          </Heading>\\r\\n          <Text as=\\\"p\\\">\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\r\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\r\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\r\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\r\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\r\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\r\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\r\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\r\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\r\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\r\\n            exercitation ullamco laboris nisi ut\\r\\n          </Text>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const NotConnected: React.FC = () => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>Page body</h1>\\r\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\r\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\r\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\r\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\r\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\r\\n          mollit anim id est laborum.\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const WithoutConnectButton: React.FC = () => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>No connect button on top</h1>\\r\\n          This variant is needed for info site\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const MenuEntryComponent: React.FC = () => {\\r\\n  return (\\r\\n    <Flex justifyContent=\\\"space-between\\\" p=\\\"16px\\\" style={{ backgroundColor: \\\"wheat\\\" }}>\\r\\n      <MenuEntry>Default</MenuEntry>\\r\\n      <MenuEntry secondary>Secondary</MenuEntry>\\r\\n      <MenuEntry isActive>isActive</MenuEntry>\\r\\n    </Flex>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const WithSubmenuSelected: React.FC = () => {\\r\\n  return (\\r\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\r\\n      <Menu\\r\\n        isDark={false}\\r\\n        toggleTheme={noop}\\r\\n        langs={langs}\\r\\n        setLang={noop}\\r\\n        currentLang=\\\"EN\\\"\\r\\n        cakePriceUsd={0.23158668932877668}\\r\\n        links={links}\\r\\n      >\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Submenu leaderboard selected\\r\\n          </Heading>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </MemoryRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const UserMenuWithVariants: React.FC = () => {\\r\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\r\\n  const [text, setText] = useState(undefined);\\r\\n\\r\\n  const handleChange = (evt) => {\\r\\n    const { value } = evt.target;\\r\\n    setText(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Box p=\\\"40px\\\">\\r\\n        <Flex justifyContent=\\\"space-between\\\">\\r\\n          <Box>\\r\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\r\\n              Variants\\r\\n            </Heading>\\r\\n            <Flex mb=\\\"16px\\\">\\r\\n              {Object.keys(variants).map((variantKey) => (\\r\\n                <Button\\r\\n                  scale=\\\"sm\\\"\\r\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\r\\n                  ml=\\\"8px\\\"\\r\\n                  onClick={() => setVariant(variants[variantKey])}\\r\\n                >\\r\\n                  {variants[variantKey].toUpperCase()}\\r\\n                </Button>\\r\\n              ))}\\r\\n            </Flex>\\r\\n            <Box py=\\\"8px\\\">\\r\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\r\\n            </Box>\\r\\n          </Box>\\r\\n          <UserMenuComponent variant={variant} text={text} />\\r\\n        </Flex>\\r\\n      </Box>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Connected\":{\"startLoc\":{\"col\":35,\"line\":133},\"endLoc\":{\"col\":1,\"line\":159},\"startBody\":{\"col\":35,\"line\":133},\"endBody\":{\"col\":1,\"line\":159}},\"NotConnected\":{\"startLoc\":{\"col\":38,\"line\":161},\"endLoc\":{\"col\":1,\"line\":180},\"startBody\":{\"col\":38,\"line\":161},\"endBody\":{\"col\":1,\"line\":180}},\"WithoutConnectButton\":{\"startLoc\":{\"col\":46,\"line\":182},\"endLoc\":{\"col\":1,\"line\":193},\"startBody\":{\"col\":46,\"line\":182},\"endBody\":{\"col\":1,\"line\":193}},\"MenuEntryComponent\":{\"startLoc\":{\"col\":44,\"line\":195},\"endLoc\":{\"col\":1,\"line\":203},\"startBody\":{\"col\":44,\"line\":195},\"endBody\":{\"col\":1,\"line\":203}},\"WithSubmenuSelected\":{\"startLoc\":{\"col\":45,\"line\":205},\"endLoc\":{\"col\":1,\"line\":225},\"startBody\":{\"col\":45,\"line\":205},\"endBody\":{\"col\":1,\"line\":225}},\"UserMenuWithVariants\":{\"startLoc\":{\"col\":46,\"line\":227},\"endLoc\":{\"col\":1,\"line\":265},\"startBody\":{\"col\":46,\"line\":227},\"endBody\":{\"col\":1,\"line\":265}}};\n    \nimport React, { useEffect, useState } from \"react\";\r\nimport noop from \"lodash/noop\";\r\nimport { BrowserRouter, Link, MemoryRouter } from \"react-router-dom\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport Box from \"../../components/Box/Box\";\r\nimport Heading from \"../../components/Heading/Heading\";\r\nimport Text from \"../../components/Text/Text\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { Language } from \"./types\";\r\nimport { links } from \"./config\";\r\nimport { MenuEntry } from \"./components/MenuEntry\";\r\nimport UserMenu from \"./components/UserMenu\";\r\nimport { UserMenuDivider, UserMenuItem } from \"./components/UserMenu/styles\";\r\nimport { variants, Variant } from \"./components/UserMenu/types\";\r\nimport Menu from \"./Menu\";\r\nimport { CogIcon, LanguageCurrencyIcon, LogoutIcon } from \"../../components/Svg\";\r\nimport IconButton from \"../../components/Button/IconButton\";\r\nimport { Modal, ModalProps, useModal } from \"../Modal\";\r\n\r\nexport default {\r\n  title: \"Widgets/Menu\",\r\n  component: Menu,\r\n  argTypes: {},\r\n};\r\n\r\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\r\n  code: `en${i}`,\r\n  language: `English${i}`,\r\n  locale: `Locale${i}`,\r\n}));\r\n\r\nconst UserMenuComponent: React.FC<{ variant?: Variant; text?: string; account?: string }> = ({\r\n  variant = variants.DEFAULT,\r\n  text,\r\n  account = \"0x8b017905DC96B38f817473dc885F84D4C76bC113\",\r\n}) => (\r\n  <UserMenu variant={variant} text={text} account={account}>\r\n    <UserMenuItem type=\"button\" onClick={noop}>\r\n      Wallet\r\n    </UserMenuItem>\r\n    <UserMenuItem type=\"button\">Transactions</UserMenuItem>\r\n    <UserMenuDivider />\r\n    <UserMenuItem type=\"button\" disabled>\r\n      Dashboard\r\n    </UserMenuItem>\r\n    <UserMenuItem type=\"button\" disabled>\r\n      Portfolio\r\n    </UserMenuItem>\r\n    <UserMenuItem as={Link} to=\"/profile\">\r\n      React Router Link\r\n    </UserMenuItem>\r\n    <UserMenuItem as=\"a\" href=\"https://pancakeswap.finance\" target=\"_blank\">\r\n      Link\r\n    </UserMenuItem>\r\n    <UserMenuDivider />\r\n    <UserMenuItem as=\"button\" onClick={noop}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n        Disconnect\r\n        <LogoutIcon />\r\n      </Flex>\r\n    </UserMenuItem>\r\n  </UserMenu>\r\n);\r\n\r\nconst GlobalMenuModal: React.FC<ModalProps> = ({ title, onDismiss, ...props }) => (\r\n  <Modal title={title} onDismiss={onDismiss} {...props}>\r\n    <Heading>{title}</Heading>\r\n    <Button>This button Does nothing</Button>\r\n  </Modal>\r\n);\r\n\r\nconst GlobalMenuComponent: React.FC = () => {\r\n  const [onPresent1] = useModal(<GlobalMenuModal title=\"Display Settings Modal\" />);\r\n  const [onPresent2] = useModal(<GlobalMenuModal title=\"Global Settings Modal\" />);\r\n\r\n  return (\r\n    <Flex>\r\n      <IconButton onClick={onPresent1} variant=\"text\" scale=\"sm\" mr=\"4px\">\r\n        <LanguageCurrencyIcon height={22} width={22} color=\"textSubtle\" />\r\n      </IconButton>\r\n      <IconButton onClick={onPresent2} variant=\"text\" scale=\"sm\" mr=\"8px\">\r\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\r\n      </IconButton>\r\n    </Flex>\r\n  );\r\n};\r\n\r\n// This hook is used to simulate a props change, and force a re rendering\r\nconst useProps = () => {\r\n  const [props, setProps] = useState({\r\n    account: \"0xbdda50183d817c3289f895a4472eb475967dc980\",\r\n    login: noop,\r\n    logout: noop,\r\n    isDark: false,\r\n    toggleTheme: noop,\r\n    langs,\r\n    setLang: noop,\r\n    currentLang: \"EN\",\r\n    cakePriceUsd: 0.023158668932877668,\r\n    links,\r\n    profile: null,\r\n    userMenu: <UserMenuComponent account=\"0xbdda50183d817c3289f895a4472eb475967dc980\" />,\r\n    globalMenu: <GlobalMenuComponent />,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setProps({\r\n        account: \"0xbdda50183d817c3289f895a4472eb475967dc980\",\r\n        login: noop,\r\n        logout: noop,\r\n        isDark: false,\r\n        toggleTheme: noop,\r\n        langs,\r\n        setLang: noop,\r\n        currentLang: \"EN\",\r\n        cakePriceUsd: 0.023158668932877668,\r\n        links,\r\n        profile: null,\r\n        userMenu: <UserMenuComponent account=\"0xbdda50183d817c3289f895a4472eb475967dc980\" />,\r\n        globalMenu: <GlobalMenuComponent />,\r\n      });\r\n    }, 2000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return props;\r\n};\r\n\r\nexport const Connected: React.FC = () => {\r\n  const props = useProps();\r\n  return (\r\n    <BrowserRouter>\r\n      <Menu {...props}>\r\n        <div>\r\n          <Heading as=\"h1\" mb=\"8px\">\r\n            Page body\r\n          </Heading>\r\n          <Text as=\"p\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\r\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\r\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\r\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\r\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\r\n            exercitation ullamco laboris nisi ut\r\n          </Text>\r\n        </div>\r\n      </Menu>\r\n    </BrowserRouter>\r\n  );\r\n};;\r\n\r\nexport const NotConnected: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\"EN\" links={links}>\r\n        <div>\r\n          <h1>Page body</h1>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\r\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\r\n          mollit anim id est laborum.\r\n        </div>\r\n      </Menu>\r\n    </BrowserRouter>\r\n  );\r\n};;\r\n\r\nexport const WithoutConnectButton: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\"EN\" links={links}>\r\n        <div>\r\n          <h1>No connect button on top</h1>\r\n          This variant is needed for info site\r\n        </div>\r\n      </Menu>\r\n    </BrowserRouter>\r\n  );\r\n};;\r\n\r\nexport const MenuEntryComponent: React.FC = () => {\r\n  return (\r\n    <Flex justifyContent=\"space-between\" p=\"16px\" style={{ backgroundColor: \"wheat\" }}>\r\n      <MenuEntry>Default</MenuEntry>\r\n      <MenuEntry secondary>Secondary</MenuEntry>\r\n      <MenuEntry isActive>isActive</MenuEntry>\r\n    </Flex>\r\n  );\r\n};;\r\n\r\nexport const WithSubmenuSelected: React.FC = () => {\r\n  return (\r\n    <MemoryRouter initialEntries={[\"/teams\"]}>\r\n      <Menu\r\n        isDark={false}\r\n        toggleTheme={noop}\r\n        langs={langs}\r\n        setLang={noop}\r\n        currentLang=\"EN\"\r\n        cakePriceUsd={0.23158668932877668}\r\n        links={links}\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" mb=\"8px\">\r\n            Submenu leaderboard selected\r\n          </Heading>\r\n        </div>\r\n      </Menu>\r\n    </MemoryRouter>\r\n  );\r\n};;\r\n\r\nexport const UserMenuWithVariants: React.FC = () => {\r\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\r\n  const [text, setText] = useState(undefined);\r\n\r\n  const handleChange = (evt) => {\r\n    const { value } = evt.target;\r\n    setText(value);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Box p=\"40px\">\r\n        <Flex justifyContent=\"space-between\">\r\n          <Box>\r\n            <Heading size=\"sm\" mb=\"16px\">\r\n              Variants\r\n            </Heading>\r\n            <Flex mb=\"16px\">\r\n              {Object.keys(variants).map((variantKey) => (\r\n                <Button\r\n                  scale=\"sm\"\r\n                  variant={variant === variants[variantKey] ? \"primary\" : \"text\"}\r\n                  ml=\"8px\"\r\n                  onClick={() => setVariant(variants[variantKey])}\r\n                >\r\n                  {variants[variantKey].toUpperCase()}\r\n                </Button>\r\n              ))}\r\n            </Flex>\r\n            <Box py=\"8px\">\r\n              <Input value={text} onChange={handleChange} placeholder=\"Custom Text...\" />\r\n            </Box>\r\n          </Box>\r\n          <UserMenuComponent variant={variant} text={text} />\r\n        </Flex>\r\n      </Box>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\n\n\nConnected.parameters = { storySource: { source: \"() => {\\r\\n  const props = useProps();\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu {...props}>\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Page body\\r\\n          </Heading>\\r\\n          <Text as=\\\"p\\\">\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\r\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\r\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\r\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\r\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\r\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\r\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\r\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\r\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\r\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\r\\n            exercitation ullamco laboris nisi ut\\r\\n          </Text>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...Connected.parameters };\nNotConnected.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>Page body</h1>\\r\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\r\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\r\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\r\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\r\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\r\\n          mollit anim id est laborum.\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...NotConnected.parameters };\nWithoutConnectButton.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>No connect button on top</h1>\\r\\n          This variant is needed for info site\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...WithoutConnectButton.parameters };\nMenuEntryComponent.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <Flex justifyContent=\\\"space-between\\\" p=\\\"16px\\\" style={{ backgroundColor: \\\"wheat\\\" }}>\\r\\n      <MenuEntry>Default</MenuEntry>\\r\\n      <MenuEntry secondary>Secondary</MenuEntry>\\r\\n      <MenuEntry isActive>isActive</MenuEntry>\\r\\n    </Flex>\\r\\n  );\\r\\n}\" }, ...MenuEntryComponent.parameters };\nWithSubmenuSelected.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\r\\n      <Menu\\r\\n        isDark={false}\\r\\n        toggleTheme={noop}\\r\\n        langs={langs}\\r\\n        setLang={noop}\\r\\n        currentLang=\\\"EN\\\"\\r\\n        cakePriceUsd={0.23158668932877668}\\r\\n        links={links}\\r\\n      >\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Submenu leaderboard selected\\r\\n          </Heading>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </MemoryRouter>\\r\\n  );\\r\\n}\" }, ...WithSubmenuSelected.parameters };\nUserMenuWithVariants.parameters = { storySource: { source: \"() => {\\r\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\r\\n  const [text, setText] = useState(undefined);\\r\\n\\r\\n  const handleChange = (evt) => {\\r\\n    const { value } = evt.target;\\r\\n    setText(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Box p=\\\"40px\\\">\\r\\n        <Flex justifyContent=\\\"space-between\\\">\\r\\n          <Box>\\r\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\r\\n              Variants\\r\\n            </Heading>\\r\\n            <Flex mb=\\\"16px\\\">\\r\\n              {Object.keys(variants).map((variantKey) => (\\r\\n                <Button\\r\\n                  scale=\\\"sm\\\"\\r\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\r\\n                  ml=\\\"8px\\\"\\r\\n                  onClick={() => setVariant(variants[variantKey])}\\r\\n                >\\r\\n                  {variants[variantKey].toUpperCase()}\\r\\n                </Button>\\r\\n              ))}\\r\\n            </Flex>\\r\\n            <Box py=\\\"8px\\\">\\r\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\r\\n            </Box>\\r\\n          </Box>\\r\\n          <UserMenuComponent variant={variant} text={text} />\\r\\n        </Flex>\\r\\n      </Box>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...UserMenuWithVariants.parameters };"],"mappings":"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","sourceRoot":""}