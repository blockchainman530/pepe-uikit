{"version":3,"file":"main.7a0187fc1f1a82e33972.hot-update.js","sources":["webpack:///./src/widgets/Menu/Menu.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport throttle from \"lodash/throttle\";\r\nimport Overlay from \"../../components/Overlay/Overlay\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport { useMatchBreakpoints } from \"../../hooks\";\r\nimport Logo from \"./components/Logo\";\r\nimport Panel from \"./components/Panel\";\r\nimport { NavProps } from \"./types\";\r\nimport { MENU_HEIGHT, SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"./config\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledNav = styled.nav<{ showMenu: boolean }>`\r\n  position: fixed;\r\n  top: ${({ showMenu }) => (showMenu ? 0 : `-${MENU_HEIGHT}px`)};\r\n  left: 0;\r\n  transition: top 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 8px;\r\n  padding-right: 16px;\r\n  width: 100%;\r\n  height: ${MENU_HEIGHT}px;\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  border-bottom: solid 2px rgba(133, 133, 133, 0.1);\r\n  z-index: 20;\r\n  transform: translate3d(0, 0, 0);\r\n`;\r\n\r\nconst BodyWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n`;\r\n\r\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean }>`\r\n  flex-grow: 1;\r\n  margin-top: ${({ showMenu }) => (showMenu ? `${MENU_HEIGHT}px` : 0)};\r\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\r\n  transform: translate3d(0, 0, 0);\r\n  max-width: 100%;\r\n\r\n  // ${({ theme }) => theme.mediaQueries.nav} {\r\n  //   margin-left: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\r\n  //   max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\r\n  // }\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    margin-left: 0;\r\n    max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\r\n  }\r\n`;\r\n\r\nconst MobileOnlyOverlay = styled(Overlay)`\r\n  position: fixed;\r\n  height: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Menu: React.FC<NavProps> = ({\r\n  userMenu,\r\n  globalMenu,\r\n  isDark,\r\n  toggleTheme,\r\n  langs,\r\n  setLang,\r\n  currentLang,\r\n  cakePriceUsd,\r\n  links,\r\n  children,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints();\r\n  const isSmallerScreen = isMobile || isTablet;\r\n  const [isPushed, setIsPushed] = useState(!isSmallerScreen);\r\n  const [showMenu, setShowMenu] = useState(true);\r\n  const refPrevOffset = useRef(window.pageYOffset);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentOffset = window.pageYOffset;\r\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight;\r\n      const isTopOfPage = currentOffset === 0;\r\n      // Always show the menu when user reach the top\r\n      if (isTopOfPage) {\r\n        setShowMenu(true);\r\n      }\r\n      // Avoid triggering anything at the bottom because of layout shift\r\n      else if (!isBottomOfPage) {\r\n        if (currentOffset < refPrevOffset.current) {\r\n          // Has scroll up\r\n          setShowMenu(true);\r\n        } else {\r\n          // Has scroll down\r\n          setShowMenu(false);\r\n        }\r\n      }\r\n      refPrevOffset.current = currentOffset;\r\n    };\r\n    const throttledHandleScroll = throttle(handleScroll, 200);\r\n\r\n    window.addEventListener(\"scroll\", throttledHandleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\r\n    };\r\n  }, []);\r\n\r\n  // Find the home link if provided\r\n  const homeLink = links.find((link) => link.label === \"Home\");\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledNav showMenu={showMenu}>\r\n        {/* <Logo\r\n          isPushed={isPushed}\r\n          togglePush={() => setIsPushed((prevState: boolean) => !prevState)}\r\n          isDark={isDark}\r\n          href={homeLink?.href ?? \"/\"}\r\n        /> */}\r\n        <Flex>\r\n          {globalMenu} {userMenu}\r\n        </Flex>\r\n      </StyledNav>\r\n      <BodyWrapper>\r\n        {/* <Panel\r\n          isPushed={isPushed}\r\n          isMobile={isSmallerScreen}\r\n          showMenu={showMenu}\r\n          isDark={isDark}\r\n          toggleTheme={toggleTheme}\r\n          langs={langs}\r\n          setLang={setLang}\r\n          currentLang={currentLang}\r\n          cakePriceUsd={cakePriceUsd}\r\n          pushNav={setIsPushed}\r\n          links={links}\r\n        /> */}\r\n        <Inner isPushed={isPushed} showMenu={showMenu}>\r\n          {children}\r\n        </Inner>\r\n        <MobileOnlyOverlay show={isPushed} onClick={() => setIsPushed(false)} role=\"presentation\" />\r\n      </BodyWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;;;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAUA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AASA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAIA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAOA;AAAA;AAPA;AAWA;AAcA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAZA;AAiCA;AACA;AArFA;AAsFA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}