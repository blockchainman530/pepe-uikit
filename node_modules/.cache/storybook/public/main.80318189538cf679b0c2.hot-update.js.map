{"version":3,"file":"main.80318189538cf679b0c2.hot-update.js","sources":["webpack:///./src/components/Alert/Alert.tsx","webpack:///./src/components/BalanceInput/BalanceInput.tsx","webpack:///./src/components/Button/ExpandableButton.tsx","webpack:///./src/components/Button/index.stories.tsx","webpack:///./src/components/Link/index.stories.tsx","webpack:///./src/components/Message/Message.tsx","webpack:///./src/components/Message/index.stories.tsx","webpack:///./src/components/Progress/Progress.tsx","webpack:///./src/components/SubMenu/index.stories.tsx","webpack:///./src/components/Svg/index.tsx","webpack:///./src/components/Tag/index.stories.tsx","webpack:///./src/widgets/Menu/Menu.tsx","webpack:///./src/widgets/Menu/components/Accordion.tsx","webpack:///./src/widgets/Menu/components/CakePrice.tsx","webpack:///./src/widgets/Menu/components/LangSelector.tsx","webpack:///./src/widgets/Menu/components/Logo.tsx","webpack:///./src/widgets/Menu/components/MenuEntry.tsx","webpack:///./src/widgets/Menu/components/Panel.tsx","webpack:///./src/widgets/Menu/components/PanelBody.tsx","webpack:///./src/widgets/Menu/components/PanelFooter.tsx","webpack:///./src/widgets/Menu/components/SocialLinks.tsx","webpack:///./src/widgets/Menu/components/ThemeSwitcher.tsx","webpack:///./src/widgets/Menu/components/UserMenu/MenuIcon.tsx","webpack:///./src/widgets/Menu/components/UserMenu/index.tsx","webpack:///./src/widgets/Menu/config.ts","webpack:///./src/widgets/Menu/icons/Farm.tsx","webpack:///./src/widgets/Menu/icons/Groups.tsx","webpack:///./src/widgets/Menu/icons/Home.tsx","webpack:///./src/widgets/Menu/icons/Ifo.tsx","webpack:///./src/widgets/Menu/icons/Info.tsx","webpack:///./src/widgets/Menu/icons/Moon.tsx","webpack:///./src/widgets/Menu/icons/More.tsx","webpack:///./src/widgets/Menu/icons/Nft.tsx","webpack:///./src/widgets/Menu/icons/Pool.tsx","webpack:///./src/widgets/Menu/icons/Predictions.tsx","webpack:///./src/widgets/Menu/icons/Sun.tsx","webpack:///./src/widgets/Menu/icons/TeamBattle.tsx","webpack:///./src/widgets/Menu/icons/Telegram.tsx","webpack:///./src/widgets/Menu/icons/Ticket.tsx","webpack:///./src/widgets/Menu/icons/Trade.tsx","webpack:///./src/widgets/Menu/icons/Twitter.tsx","webpack:///./src/widgets/Menu/icons/index.ts","webpack:///./src/widgets/Menu/index.stories.tsx","webpack:///./src/widgets/Modal/styles.tsx","webpack:///./src/widgets/WalletModal/CopyToClipboard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { DefaultTheme } from \"styled-components\";\r\nimport CheckmarkCircleIcon from \"../Svg/Icons/CheckmarkCircle\";\r\nimport ErrorIcon from \"../Svg/Icons/Error\";\r\nimport BlockIcon from \"../Svg/Icons/Block\";\r\nimport InfoIcon from \"../Svg/Icons/Info\";\r\nimport { Text } from \"../Text\";\r\nimport { IconButton } from \"../Button\";\r\nimport { CloseIcon } from \"../Svg\";\r\nimport Flex from \"../Box/Flex\";\r\nimport { AlertProps, variants } from \"./types\";\r\n\r\ninterface ThemedIconLabel {\r\n  variant: AlertProps[\"variant\"];\r\n  theme: DefaultTheme;\r\n  hasDescription: boolean;\r\n}\r\n\r\nconst getThemeColor = ({ theme, variant = variants.INFO }: ThemedIconLabel) => {\r\n  switch (variant) {\r\n    case variants.DANGER:\r\n      return theme.colors.failure;\r\n    case variants.WARNING:\r\n      return theme.colors.warning;\r\n    case variants.SUCCESS:\r\n      return theme.colors.success;\r\n    case variants.INFO:\r\n    default:\r\n      return theme.colors.secondary;\r\n  }\r\n};\r\n\r\nconst getIcon = (variant: AlertProps[\"variant\"] = variants.INFO) => {\r\n  switch (variant) {\r\n    case variants.DANGER:\r\n      return BlockIcon;\r\n    case variants.WARNING:\r\n      return ErrorIcon;\r\n    case variants.SUCCESS:\r\n      return CheckmarkCircleIcon;\r\n    case variants.INFO:\r\n    default:\r\n      return InfoIcon;\r\n  }\r\n};\r\n\r\nconst IconLabel = styled.div<ThemedIconLabel>`\r\n  background-color: ${getThemeColor};\r\n  border-radius: 16px 0 0 16px;\r\n  color: ${({ theme }) => theme.alert.background};\r\n  padding: 12px;\r\n`;\r\n\r\nconst withHandlerSpacing = 32 + 12 + 8; // button size + inner spacing + handler position\r\nconst Details = styled.div<{ hasHandler: boolean }>`\r\n  flex: 1;\r\n  padding-bottom: 12px;\r\n  padding-left: 12px;\r\n  padding-right: ${({ hasHandler }) => (hasHandler ? `${withHandlerSpacing}px` : \"12px\")};\r\n  padding-top: 12px;\r\n`;\r\n\r\nconst CloseHandler = styled.div`\r\n  border-radius: 0 16px 16px 0;\r\n  right: 8px;\r\n  position: absolute;\r\n  top: 8px;\r\n`;\r\n\r\nconst StyledAlert = styled(Flex)`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.alert.background};\r\n  border-radius: 16px;\r\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst Alert: React.FC<AlertProps> = ({ title, children, variant, onClick }) => {\r\n  const Icon = getIcon(variant);\r\n\r\n  return (\r\n    <StyledAlert>\r\n      <IconLabel variant={variant} hasDescription={!!children}>\r\n        <Icon color=\"currentColor\" width=\"24px\" />\r\n      </IconLabel>\r\n      <Details hasHandler={!!onClick}>\r\n        <Text bold>{title}</Text>\r\n        {typeof children === \"string\" ? <Text as=\"p\">{children}</Text> : children}\r\n      </Details>\r\n      {onClick && (\r\n        <CloseHandler>\r\n          <IconButton scale=\"sm\" variant=\"text\" onClick={onClick}>\r\n            <CloseIcon width=\"24px\" color=\"currentColor\" />\r\n          </IconButton>\r\n        </CloseHandler>\r\n      )}\r\n    </StyledAlert>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport { Flex, Box } from \"../Box\";\r\nimport { SwapVertIcon } from \"../Svg\";\r\nimport Text from \"../Text/Text\";\r\nimport { StyledBalanceInput, StyledInput, UnitContainer, SwitchUnitsButton } from \"./styles\";\r\nimport { BalanceInputProps } from \"./types\";\r\n\r\nconst BalanceInput: React.FC<BalanceInputProps> = ({\r\n  value,\r\n  placeholder = \"0.0\",\r\n  onUserInput,\r\n  currencyValue,\r\n  inputProps,\r\n  innerRef,\r\n  isWarning = false,\r\n  decimals = 18,\r\n  unit,\r\n  switchEditingUnits,\r\n  ...props\r\n}) => {\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.validity.valid) {\r\n      onUserInput(e.currentTarget.value.replace(/,/g, \".\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledBalanceInput isWarning={isWarning} {...props}>\r\n      <Flex justifyContent=\"flex-end\">\r\n        <Box>\r\n          <Flex alignItems=\"center\">\r\n            <StyledInput\r\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\r\n              inputMode=\"decimal\"\r\n              min=\"0\"\r\n              value={value}\r\n              onChange={handleOnChange}\r\n              placeholder={placeholder}\r\n              ref={innerRef}\r\n              {...inputProps}\r\n            />\r\n            {unit && <UnitContainer>{unit}</UnitContainer>}\r\n          </Flex>\r\n          {currencyValue && (\r\n            <Text fontSize=\"12px\" textAlign=\"right\" color=\"textSubtle\">\r\n              {currencyValue}\r\n            </Text>\r\n          )}\r\n        </Box>\r\n        {switchEditingUnits && (\r\n          <Flex alignItems=\"center\" pl=\"12px\">\r\n            <SwitchUnitsButton scale=\"sm\" variant=\"text\" onClick={switchEditingUnits}>\r\n              <SwapVertIcon color=\"textSubtle\" />\r\n            </SwitchUnitsButton>\r\n          </Flex>\r\n        )}\r\n      </Flex>\r\n    </StyledBalanceInput>\r\n  );\r\n};\r\n\r\nexport default BalanceInput;\r\n","import React from \"react\";\r\nimport { ChevronDownIcon, ChevronUpIcon } from \"../Svg\";\r\nimport Button from \"./Button\";\r\nimport IconButton from \"./IconButton\";\r\n\r\ninterface Props {\r\n  onClick?: () => void;\r\n  expanded?: boolean;\r\n}\r\n\r\nexport const ExpandableButton: React.FC<Props> = ({ onClick, expanded, children }) => {\r\n  return (\r\n    <IconButton aria-label=\"Hide or show expandable content\" onClick={onClick}>\r\n      {children}\r\n      {expanded ? <ChevronUpIcon color=\"invertedContrast\" /> : <ChevronDownIcon color=\"invertedContrast\" />}\r\n    </IconButton>\r\n  );\r\n};\r\nExpandableButton.defaultProps = {\r\n  expanded: false,\r\n};\r\n\r\nexport const ExpandableLabel: React.FC<Props> = ({ onClick, expanded, children }) => {\r\n  return (\r\n    <Button\r\n      variant=\"text\"\r\n      aria-label=\"Hide or show expandable content\"\r\n      onClick={onClick}\r\n      endIcon={expanded ? <ChevronUpIcon color=\"primary\" /> : <ChevronDownIcon color=\"primary\" />}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\nExpandableLabel.defaultProps = {\r\n  expanded: false,\r\n};\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { capitalize } from \\\"lodash\\\";\\r\\nimport React, { useState } from \\\"react\\\";\\r\\nimport { BrowserRouter, Link } from \\\"react-router-dom\\\";\\r\\nimport styled from \\\"styled-components\\\";\\r\\nimport Box from \\\"../Box/Box\\\";\\r\\nimport Flex from \\\"../Box/Flex\\\";\\r\\nimport { AddIcon, AutoRenewIcon, LogoIcon } from \\\"../Svg\\\";\\r\\nimport IconButton from \\\"./IconButton\\\";\\r\\nimport Button from \\\"./Button\\\";\\r\\nimport { ExpandableButton, ExpandableLabel } from \\\"./ExpandableButton\\\";\\r\\nimport { scales, variants } from \\\"./types\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Components/Button\\\",\\r\\n  component: Button,\\r\\n  argTypes: {},\\r\\n};\\r\\n\\r\\nconst Row = styled(Flex)`\\r\\n  margin-bottom: 32px;\\r\\n  & > button + button,\\r\\n  & > a + a {\\r\\n    margin-left: 16px;\\r\\n  }\\r\\n`;\\r\\n\\r\\nexport const Default: React.FC = () => {\\r\\n  return (\\r\\n    <>\\r\\n      <Box mb=\\\"32px\\\">\\r\\n        <button type=\\\"button\\\">Unstyled Button</button>\\r\\n      </Box>\\r\\n      <Box mb=\\\"32px\\\">\\r\\n        {Object.values(variants).map((variant) => {\\r\\n          return (\\r\\n            <Box key={variant} mb=\\\"32px\\\">\\r\\n              {Object.values(scales).map((scale) => {\\r\\n                return (\\r\\n                  <Button key={scale} variant={variant} scale={scale} mr=\\\"8px\\\">\\r\\n                    {`${capitalize(variant)} ${scale.toUpperCase()}`}\\r\\n                  </Button>\\r\\n                );\\r\\n              })}\\r\\n            </Box>\\r\\n          );\\r\\n        })}\\r\\n      </Box>\\r\\n      <Box>\\r\\n        <Button mr=\\\"8px\\\" disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n        <Button variant=\\\"secondary\\\" disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n      </Box>\\r\\n    </>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Anchors: React.FC = () => {\\r\\n  return (\\r\\n    <>\\r\\n      <Box mb=\\\"32px\\\">\\r\\n        {Object.values(variants).map((variant) => {\\r\\n          return (\\r\\n            <Box key={variant} mb=\\\"32px\\\">\\r\\n              {Object.values(scales).map((scale) => {\\r\\n                return (\\r\\n                  <Button\\r\\n                    as=\\\"a\\\"\\r\\n                    href=\\\"https://pancakeswap.finance\\\"\\r\\n                    key={scale}\\r\\n                    variant={variant}\\r\\n                    scale={scale}\\r\\n                    external\\r\\n                    mr=\\\"8px\\\"\\r\\n                  >\\r\\n                    {`${capitalize(variant)} anchor ${scale.toUpperCase()}`}\\r\\n                  </Button>\\r\\n                );\\r\\n              })}\\r\\n            </Box>\\r\\n          );\\r\\n        })}\\r\\n      </Box>\\r\\n      <Box>\\r\\n        <Button as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" mr=\\\"8px\\\" external disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n        <Button as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" variant=\\\"secondary\\\" external disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n      </Box>\\r\\n    </>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Variants: React.FC = () => {\\r\\n  return (\\r\\n    <Box width=\\\"640px\\\">\\r\\n      <BrowserRouter>\\r\\n        <Row>\\r\\n          <Button as={Link} to=\\\"/router-link\\\" variant=\\\"secondary\\\">\\r\\n            As an React Router link\\r\\n          </Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <Button width=\\\"100%\\\">Full size</Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <Button isLoading endIcon={<AutoRenewIcon spin color=\\\"currentColor\\\" />}>\\r\\n            Approving\\r\\n          </Button>\\r\\n          <Button isLoading variant=\\\"success\\\">\\r\\n            Approving\\r\\n          </Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <Button startIcon={<LogoIcon />}>Start Icon</Button>\\r\\n          <Button endIcon={<LogoIcon />}>End Icon</Button>\\r\\n          <Button startIcon={<LogoIcon />} endIcon={<LogoIcon />}>\\r\\n            Start & End Icon\\r\\n          </Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <IconButton>\\r\\n            <LogoIcon />\\r\\n          </IconButton>\\r\\n          <IconButton variant=\\\"secondary\\\">\\r\\n            <AddIcon />\\r\\n          </IconButton>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <IconButton scale=\\\"sm\\\" variant=\\\"danger\\\">\\r\\n            <LogoIcon />\\r\\n          </IconButton>\\r\\n          <IconButton scale=\\\"sm\\\" variant=\\\"success\\\">\\r\\n            <AddIcon color=\\\"currentColor\\\" />\\r\\n          </IconButton>\\r\\n        </Row>\\r\\n      </BrowserRouter>\\r\\n    </Box>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Expandable: React.FC = () => {\\r\\n  const [expanded, setExpanded] = useState(false);\\r\\n  return (\\r\\n    <Box width=\\\"640px\\\">\\r\\n      <BrowserRouter>\\r\\n        <Row>\\r\\n          <ExpandableButton expanded={expanded} onClick={() => setExpanded((prev) => !prev)} />\\r\\n          <ExpandableLabel expanded={expanded} onClick={() => setExpanded((prev) => !prev)}>\\r\\n            ExpandableLabel\\r\\n          </ExpandableLabel>\\r\\n        </Row>\\r\\n      </BrowserRouter>\\r\\n    </Box>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":33,\"line\":27},\"endLoc\":{\"col\":1,\"line\":58},\"startBody\":{\"col\":33,\"line\":27},\"endBody\":{\"col\":1,\"line\":58}},\"Anchors\":{\"startLoc\":{\"col\":33,\"line\":60},\"endLoc\":{\"col\":1,\"line\":96},\"startBody\":{\"col\":33,\"line\":60},\"endBody\":{\"col\":1,\"line\":96}},\"Variants\":{\"startLoc\":{\"col\":34,\"line\":98},\"endLoc\":{\"col\":1,\"line\":144},\"startBody\":{\"col\":34,\"line\":98},\"endBody\":{\"col\":1,\"line\":144}},\"Expandable\":{\"startLoc\":{\"col\":36,\"line\":146},\"endLoc\":{\"col\":1,\"line\":160},\"startBody\":{\"col\":36,\"line\":146},\"endBody\":{\"col\":1,\"line\":160}}};\n    \nimport { capitalize } from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Box from \"../Box/Box\";\r\nimport Flex from \"../Box/Flex\";\r\nimport { AddIcon, AutoRenewIcon, LogoIcon } from \"../Svg\";\r\nimport IconButton from \"./IconButton\";\r\nimport Button from \"./Button\";\r\nimport { ExpandableButton, ExpandableLabel } from \"./ExpandableButton\";\r\nimport { scales, variants } from \"./types\";\r\n\r\nexport default {\r\n  title: \"Components/Button\",\r\n  component: Button,\r\n  argTypes: {},\r\n};\r\n\r\nconst Row = styled(Flex)`\r\n  margin-bottom: 32px;\r\n  & > button + button,\r\n  & > a + a {\r\n    margin-left: 16px;\r\n  }\r\n`;\r\n\r\nexport const Default: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Box mb=\"32px\">\r\n        <button type=\"button\">Unstyled Button</button>\r\n      </Box>\r\n      <Box mb=\"32px\">\r\n        {Object.values(variants).map((variant) => {\r\n          return (\r\n            <Box key={variant} mb=\"32px\">\r\n              {Object.values(scales).map((scale) => {\r\n                return (\r\n                  <Button key={scale} variant={variant} scale={scale} mr=\"8px\">\r\n                    {`${capitalize(variant)} ${scale.toUpperCase()}`}\r\n                  </Button>\r\n                );\r\n              })}\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n      <Box>\r\n        <Button mr=\"8px\" disabled>\r\n          Disabled\r\n        </Button>\r\n        <Button variant=\"secondary\" disabled>\r\n          Disabled\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};;\r\n\r\nexport const Anchors: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Box mb=\"32px\">\r\n        {Object.values(variants).map((variant) => {\r\n          return (\r\n            <Box key={variant} mb=\"32px\">\r\n              {Object.values(scales).map((scale) => {\r\n                return (\r\n                  <Button\r\n                    as=\"a\"\r\n                    href=\"https://pancakeswap.finance\"\r\n                    key={scale}\r\n                    variant={variant}\r\n                    scale={scale}\r\n                    external\r\n                    mr=\"8px\"\r\n                  >\r\n                    {`${capitalize(variant)} anchor ${scale.toUpperCase()}`}\r\n                  </Button>\r\n                );\r\n              })}\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n      <Box>\r\n        <Button as=\"a\" href=\"https://pancakeswap.finance\" mr=\"8px\" external disabled>\r\n          Disabled\r\n        </Button>\r\n        <Button as=\"a\" href=\"https://pancakeswap.finance\" variant=\"secondary\" external disabled>\r\n          Disabled\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};;\r\n\r\nexport const Variants: React.FC = () => {\r\n  return (\r\n    <Box width=\"640px\">\r\n      <BrowserRouter>\r\n        <Row>\r\n          <Button as={Link} to=\"/router-link\" variant=\"secondary\">\r\n            As an React Router link\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <Button width=\"100%\">Full size</Button>\r\n        </Row>\r\n        <Row>\r\n          <Button isLoading endIcon={<AutoRenewIcon spin color=\"currentColor\" />}>\r\n            Approving\r\n          </Button>\r\n          <Button isLoading variant=\"success\">\r\n            Approving\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <Button startIcon={<LogoIcon />}>Start Icon</Button>\r\n          <Button endIcon={<LogoIcon />}>End Icon</Button>\r\n          <Button startIcon={<LogoIcon />} endIcon={<LogoIcon />}>\r\n            Start & End Icon\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <IconButton>\r\n            <LogoIcon />\r\n          </IconButton>\r\n          <IconButton variant=\"secondary\">\r\n            <AddIcon />\r\n          </IconButton>\r\n        </Row>\r\n        <Row>\r\n          <IconButton scale=\"sm\" variant=\"danger\">\r\n            <LogoIcon />\r\n          </IconButton>\r\n          <IconButton scale=\"sm\" variant=\"success\">\r\n            <AddIcon color=\"currentColor\" />\r\n          </IconButton>\r\n        </Row>\r\n      </BrowserRouter>\r\n    </Box>\r\n  );\r\n};;\r\n\r\nexport const Expandable: React.FC = () => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  return (\r\n    <Box width=\"640px\">\r\n      <BrowserRouter>\r\n        <Row>\r\n          <ExpandableButton expanded={expanded} onClick={() => setExpanded((prev) => !prev)} />\r\n          <ExpandableLabel expanded={expanded} onClick={() => setExpanded((prev) => !prev)}>\r\n            ExpandableLabel\r\n          </ExpandableLabel>\r\n        </Row>\r\n      </BrowserRouter>\r\n    </Box>\r\n  );\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <>\\r\\n      <Box mb=\\\"32px\\\">\\r\\n        <button type=\\\"button\\\">Unstyled Button</button>\\r\\n      </Box>\\r\\n      <Box mb=\\\"32px\\\">\\r\\n        {Object.values(variants).map((variant) => {\\r\\n          return (\\r\\n            <Box key={variant} mb=\\\"32px\\\">\\r\\n              {Object.values(scales).map((scale) => {\\r\\n                return (\\r\\n                  <Button key={scale} variant={variant} scale={scale} mr=\\\"8px\\\">\\r\\n                    {`${capitalize(variant)} ${scale.toUpperCase()}`}\\r\\n                  </Button>\\r\\n                );\\r\\n              })}\\r\\n            </Box>\\r\\n          );\\r\\n        })}\\r\\n      </Box>\\r\\n      <Box>\\r\\n        <Button mr=\\\"8px\\\" disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n        <Button variant=\\\"secondary\\\" disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n      </Box>\\r\\n    </>\\r\\n  );\\r\\n}\" }, ...Default.parameters };\nAnchors.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <>\\r\\n      <Box mb=\\\"32px\\\">\\r\\n        {Object.values(variants).map((variant) => {\\r\\n          return (\\r\\n            <Box key={variant} mb=\\\"32px\\\">\\r\\n              {Object.values(scales).map((scale) => {\\r\\n                return (\\r\\n                  <Button\\r\\n                    as=\\\"a\\\"\\r\\n                    href=\\\"https://pancakeswap.finance\\\"\\r\\n                    key={scale}\\r\\n                    variant={variant}\\r\\n                    scale={scale}\\r\\n                    external\\r\\n                    mr=\\\"8px\\\"\\r\\n                  >\\r\\n                    {`${capitalize(variant)} anchor ${scale.toUpperCase()}`}\\r\\n                  </Button>\\r\\n                );\\r\\n              })}\\r\\n            </Box>\\r\\n          );\\r\\n        })}\\r\\n      </Box>\\r\\n      <Box>\\r\\n        <Button as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" mr=\\\"8px\\\" external disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n        <Button as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" variant=\\\"secondary\\\" external disabled>\\r\\n          Disabled\\r\\n        </Button>\\r\\n      </Box>\\r\\n    </>\\r\\n  );\\r\\n}\" }, ...Anchors.parameters };\nVariants.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <Box width=\\\"640px\\\">\\r\\n      <BrowserRouter>\\r\\n        <Row>\\r\\n          <Button as={Link} to=\\\"/router-link\\\" variant=\\\"secondary\\\">\\r\\n            As an React Router link\\r\\n          </Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <Button width=\\\"100%\\\">Full size</Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <Button isLoading endIcon={<AutoRenewIcon spin color=\\\"currentColor\\\" />}>\\r\\n            Approving\\r\\n          </Button>\\r\\n          <Button isLoading variant=\\\"success\\\">\\r\\n            Approving\\r\\n          </Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <Button startIcon={<LogoIcon />}>Start Icon</Button>\\r\\n          <Button endIcon={<LogoIcon />}>End Icon</Button>\\r\\n          <Button startIcon={<LogoIcon />} endIcon={<LogoIcon />}>\\r\\n            Start & End Icon\\r\\n          </Button>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <IconButton>\\r\\n            <LogoIcon />\\r\\n          </IconButton>\\r\\n          <IconButton variant=\\\"secondary\\\">\\r\\n            <AddIcon />\\r\\n          </IconButton>\\r\\n        </Row>\\r\\n        <Row>\\r\\n          <IconButton scale=\\\"sm\\\" variant=\\\"danger\\\">\\r\\n            <LogoIcon />\\r\\n          </IconButton>\\r\\n          <IconButton scale=\\\"sm\\\" variant=\\\"success\\\">\\r\\n            <AddIcon color=\\\"currentColor\\\" />\\r\\n          </IconButton>\\r\\n        </Row>\\r\\n      </BrowserRouter>\\r\\n    </Box>\\r\\n  );\\r\\n}\" }, ...Variants.parameters };\nExpandable.parameters = { storySource: { source: \"() => {\\r\\n  const [expanded, setExpanded] = useState(false);\\r\\n  return (\\r\\n    <Box width=\\\"640px\\\">\\r\\n      <BrowserRouter>\\r\\n        <Row>\\r\\n          <ExpandableButton expanded={expanded} onClick={() => setExpanded((prev) => !prev)} />\\r\\n          <ExpandableLabel expanded={expanded} onClick={() => setExpanded((prev) => !prev)}>\\r\\n            ExpandableLabel\\r\\n          </ExpandableLabel>\\r\\n        </Row>\\r\\n      </BrowserRouter>\\r\\n    </Box>\\r\\n  );\\r\\n}\" }, ...Expandable.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { PancakesIcon } from \\\"../Svg\\\";\\r\\nimport { Link, LinkExternal } from \\\"./index\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Components/Link\\\",\\r\\n  component: Link,\\r\\n  argTypes: {\\r\\n    fontSize: {\\r\\n      name: \\\"fontSize\\\",\\r\\n      table: {\\r\\n        type: { summary: \\\"string\\\", detail: \\\"Fontsize in px or em\\\" },\\r\\n        defaultValue: { summary: \\\"16px\\\" },\\r\\n      },\\r\\n      control: {\\r\\n        type: null,\\r\\n      },\\r\\n    },\\r\\n  },\\r\\n};\\r\\n\\r\\nexport const Default: React.FC = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <div>\\r\\n        <Link href=\\\"/\\\">Default</Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <Link href=\\\"/\\\" color=\\\"text\\\">\\r\\n          Custom color\\r\\n        </Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <Link external href=\\\"/\\\">\\r\\n          External\\r\\n        </Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <Link href=\\\"/\\\">\\r\\n          With icon\\r\\n          <PancakesIcon />\\r\\n        </Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <LinkExternal href=\\\"/\\\">LinkExternal</LinkExternal>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":33,\"line\":22},\"endLoc\":{\"col\":1,\"line\":49},\"startBody\":{\"col\":33,\"line\":22},\"endBody\":{\"col\":1,\"line\":49}}};\n    \nimport React from \"react\";\r\nimport { PancakesIcon } from \"../Svg\";\r\nimport { Link, LinkExternal } from \"./index\";\r\n\r\nexport default {\r\n  title: \"Components/Link\",\r\n  component: Link,\r\n  argTypes: {\r\n    fontSize: {\r\n      name: \"fontSize\",\r\n      table: {\r\n        type: { summary: \"string\", detail: \"Fontsize in px or em\" },\r\n        defaultValue: { summary: \"16px\" },\r\n      },\r\n      control: {\r\n        type: null,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const Default: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Link href=\"/\">Default</Link>\r\n      </div>\r\n      <div>\r\n        <Link href=\"/\" color=\"text\">\r\n          Custom color\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link external href=\"/\">\r\n          External\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link href=\"/\">\r\n          With icon\r\n          <PancakesIcon />\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <LinkExternal href=\"/\">LinkExternal</LinkExternal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <div>\\r\\n      <div>\\r\\n        <Link href=\\\"/\\\">Default</Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <Link href=\\\"/\\\" color=\\\"text\\\">\\r\\n          Custom color\\r\\n        </Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <Link external href=\\\"/\\\">\\r\\n          External\\r\\n        </Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <Link href=\\\"/\\\">\\r\\n          With icon\\r\\n          <PancakesIcon />\\r\\n        </Link>\\r\\n      </div>\\r\\n      <div>\\r\\n        <LinkExternal href=\\\"/\\\">LinkExternal</LinkExternal>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\" }, ...Default.parameters };","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { variant as systemVariant, space } from \"styled-system\";\r\nimport { WarningIcon, ErrorIcon } from \"../Svg\";\r\nimport { Box } from \"../Box\";\r\nimport { MessageProps } from \"./types\";\r\nimport variants from \"./theme\";\r\n\r\nconst Icons = {\r\n  warning: WarningIcon,\r\n  danger: ErrorIcon,\r\n};\r\n\r\nconst MessageContainer = styled.div<MessageProps>`\r\n  display: flex;\r\n  background-color: gray;\r\n  padding: 16px;\r\n  border-radius: 16px;\r\n  border: solid 1px;\r\n\r\n  ${space}\r\n  ${systemVariant({\r\n    variants,\r\n  })}\r\n`;\r\n\r\nconst Message: React.FC<MessageProps> = ({ children, variant, icon, ...props }) => {\r\n  const Icon = Icons[variant];\r\n  return (\r\n    <MessageContainer variant={variant} {...props}>\r\n      <Box mr=\"12px\">{icon ?? <Icon color={variants[variant].borderColor} width=\"24px\" />}</Box>\r\n      {children}\r\n    </MessageContainer>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport Message from \\\"./Message\\\";\\r\\nimport { HelpIcon } from \\\"../Svg\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Components/Message\\\",\\r\\n  component: Message,\\r\\n  argTypes: {},\\r\\n};\\r\\n\\r\\nexport const Default: React.FC = () => {\\r\\n  return (\\r\\n    <>\\r\\n      <Message variant=\\\"warning\\\" mb=\\\"16px\\\">\\r\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.\\r\\n      </Message>\\r\\n      <Message variant=\\\"danger\\\" mb=\\\"16px\\\">\\r\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.\\r\\n      </Message>\\r\\n      <Message variant=\\\"warning\\\" icon={<HelpIcon width=\\\"24px\\\" />}>\\r\\n        Custom Icon. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\\r\\n        et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\r\\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.\\r\\n      </Message>\\r\\n    </>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":33,\"line\":11},\"endLoc\":{\"col\":1,\"line\":37},\"startBody\":{\"col\":33,\"line\":11},\"endBody\":{\"col\":1,\"line\":37}}};\n    \nimport React from \"react\";\r\nimport Message from \"./Message\";\r\nimport { HelpIcon } from \"../Svg\";\r\n\r\nexport default {\r\n  title: \"Components/Message\",\r\n  component: Message,\r\n  argTypes: {},\r\n};\r\n\r\nexport const Default: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Message variant=\"warning\" mb=\"16px\">\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n        laborum.\r\n      </Message>\r\n      <Message variant=\"danger\" mb=\"16px\">\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n        laborum.\r\n      </Message>\r\n      <Message variant=\"warning\" icon={<HelpIcon width=\"24px\" />}>\r\n        Custom Icon. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\r\n        et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\r\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n        laborum.\r\n      </Message>\r\n    </>\r\n  );\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <>\\r\\n      <Message variant=\\\"warning\\\" mb=\\\"16px\\\">\\r\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.\\r\\n      </Message>\\r\\n      <Message variant=\\\"danger\\\" mb=\\\"16px\\\">\\r\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n        magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.\\r\\n      </Message>\\r\\n      <Message variant=\\\"warning\\\" icon={<HelpIcon width=\\\"24px\\\" />}>\\r\\n        Custom Icon. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\\r\\n        et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\\r\\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n        pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\\r\\n        laborum.\\r\\n      </Message>\\r\\n    </>\\r\\n  );\\r\\n}\" }, ...Default.parameters };","import React from \"react\";\r\nimport StyledProgress, { Bar } from \"./StyledProgress\";\r\nimport ProgressBunnyWrapper from \"./ProgressBunnyWrapper\";\r\nimport { ProgressBunny } from \"../Svg\";\r\nimport { ProgressProps, variants, scales } from \"./types\";\r\n\r\nconst stepGuard = (step: number) => {\r\n  if (step < 0) {\r\n    return 0;\r\n  }\r\n\r\n  if (step > 100) {\r\n    return 100;\r\n  }\r\n\r\n  return step;\r\n};\r\n\r\nconst Progress: React.FC<ProgressProps> = ({\r\n  variant = variants.ROUND,\r\n  scale = scales.MD,\r\n  primaryStep = 0,\r\n  secondaryStep = null,\r\n  showProgressBunny = false,\r\n}) => {\r\n  return (\r\n    <StyledProgress variant={variant} scale={scale}>\r\n      {showProgressBunny && (\r\n        <ProgressBunnyWrapper style={{ left: `${stepGuard(primaryStep)}%` }}>\r\n          <ProgressBunny />\r\n        </ProgressBunnyWrapper>\r\n      )}\r\n      <Bar primary style={{ width: `${stepGuard(primaryStep)}%` }} />\r\n      {secondaryStep ? <Bar style={{ width: `${stepGuard(secondaryStep)}%` }} /> : null}\r\n    </StyledProgress>\r\n  );\r\n};\r\n\r\nexport default Progress;\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { BrowserRouter, Link } from \\\"react-router-dom\\\";\\r\\nimport SubMenu from \\\"./SubMenu\\\";\\r\\nimport { SubMenuItem } from \\\"./styles\\\";\\r\\nimport { LinkExternal } from \\\"../Link\\\";\\r\\nimport { Flex } from \\\"../Box\\\";\\r\\nimport { Text } from \\\"../Text\\\";\\r\\nimport { EllipsisIcon } from \\\"../Svg\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Components/SubMenu\\\",\\r\\n  component: SubMenu,\\r\\n  argTypes: {},\\r\\n};\\r\\n\\r\\nexport const Default: React.FC = () => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Flex mb=\\\"24px\\\" p=\\\"8px\\\" width=\\\"300px\\\" border=\\\"1px solid grey\\\" justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\">\\r\\n        <Text>Icon</Text>\\r\\n        <SubMenu\\r\\n          component={<EllipsisIcon height=\\\"16px\\\" width=\\\"16px\\\" />}\\r\\n          options={{ placement: \\\"right\\\", offset: [0, 15], padding: { top: 20 } }}\\r\\n        >\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://bscscan.com\\\" bold={false} color=\\\"text\\\">\\r\\n            View on BSCScan\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://pancakeswap.info\\\" bold={false} color=\\\"text\\\" target=\\\"blank\\\">\\r\\n            View on PCS Info\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={Link} to=\\\"/profile\\\">\\r\\n            Go to profile page\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem>Just button</SubMenuItem>\\r\\n        </SubMenu>\\r\\n      </Flex>\\r\\n      <Flex p=\\\"8px\\\" width=\\\"300px\\\" border=\\\"1px solid grey\\\" justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\">\\r\\n        <Text>Text</Text>\\r\\n        <SubMenu\\r\\n          component={\\r\\n            <Text color=\\\"primary\\\" bold>\\r\\n              Click me\\r\\n            </Text>\\r\\n          }\\r\\n        >\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://bscscan.com\\\" bold={false} color=\\\"text\\\">\\r\\n            View on BSCScan\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://pancakeswap.info\\\" bold={false} color=\\\"text\\\" target=\\\"blank\\\">\\r\\n            View on PCS Info\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={Link} to=\\\"/profile\\\">\\r\\n            Go to profile page\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem>Just button</SubMenuItem>\\r\\n        </SubMenu>\\r\\n      </Flex>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":33,\"line\":16},\"endLoc\":{\"col\":1,\"line\":60},\"startBody\":{\"col\":33,\"line\":16},\"endBody\":{\"col\":1,\"line\":60}}};\n    \nimport React from \"react\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport { SubMenuItem } from \"./styles\";\r\nimport { LinkExternal } from \"../Link\";\r\nimport { Flex } from \"../Box\";\r\nimport { Text } from \"../Text\";\r\nimport { EllipsisIcon } from \"../Svg\";\r\n\r\nexport default {\r\n  title: \"Components/SubMenu\",\r\n  component: SubMenu,\r\n  argTypes: {},\r\n};\r\n\r\nexport const Default: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Flex mb=\"24px\" p=\"8px\" width=\"300px\" border=\"1px solid grey\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text>Icon</Text>\r\n        <SubMenu\r\n          component={<EllipsisIcon height=\"16px\" width=\"16px\" />}\r\n          options={{ placement: \"right\", offset: [0, 15], padding: { top: 20 } }}\r\n        >\r\n          <SubMenuItem as={LinkExternal} href=\"https://bscscan.com\" bold={false} color=\"text\">\r\n            View on BSCScan\r\n          </SubMenuItem>\r\n          <SubMenuItem as={LinkExternal} href=\"https://pancakeswap.info\" bold={false} color=\"text\" target=\"blank\">\r\n            View on PCS Info\r\n          </SubMenuItem>\r\n          <SubMenuItem as={Link} to=\"/profile\">\r\n            Go to profile page\r\n          </SubMenuItem>\r\n          <SubMenuItem>Just button</SubMenuItem>\r\n        </SubMenu>\r\n      </Flex>\r\n      <Flex p=\"8px\" width=\"300px\" border=\"1px solid grey\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text>Text</Text>\r\n        <SubMenu\r\n          component={\r\n            <Text color=\"primary\" bold>\r\n              Click me\r\n            </Text>\r\n          }\r\n        >\r\n          <SubMenuItem as={LinkExternal} href=\"https://bscscan.com\" bold={false} color=\"text\">\r\n            View on BSCScan\r\n          </SubMenuItem>\r\n          <SubMenuItem as={LinkExternal} href=\"https://pancakeswap.info\" bold={false} color=\"text\" target=\"blank\">\r\n            View on PCS Info\r\n          </SubMenuItem>\r\n          <SubMenuItem as={Link} to=\"/profile\">\r\n            Go to profile page\r\n          </SubMenuItem>\r\n          <SubMenuItem>Just button</SubMenuItem>\r\n        </SubMenu>\r\n      </Flex>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Flex mb=\\\"24px\\\" p=\\\"8px\\\" width=\\\"300px\\\" border=\\\"1px solid grey\\\" justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\">\\r\\n        <Text>Icon</Text>\\r\\n        <SubMenu\\r\\n          component={<EllipsisIcon height=\\\"16px\\\" width=\\\"16px\\\" />}\\r\\n          options={{ placement: \\\"right\\\", offset: [0, 15], padding: { top: 20 } }}\\r\\n        >\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://bscscan.com\\\" bold={false} color=\\\"text\\\">\\r\\n            View on BSCScan\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://pancakeswap.info\\\" bold={false} color=\\\"text\\\" target=\\\"blank\\\">\\r\\n            View on PCS Info\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={Link} to=\\\"/profile\\\">\\r\\n            Go to profile page\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem>Just button</SubMenuItem>\\r\\n        </SubMenu>\\r\\n      </Flex>\\r\\n      <Flex p=\\\"8px\\\" width=\\\"300px\\\" border=\\\"1px solid grey\\\" justifyContent=\\\"space-between\\\" alignItems=\\\"center\\\">\\r\\n        <Text>Text</Text>\\r\\n        <SubMenu\\r\\n          component={\\r\\n            <Text color=\\\"primary\\\" bold>\\r\\n              Click me\\r\\n            </Text>\\r\\n          }\\r\\n        >\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://bscscan.com\\\" bold={false} color=\\\"text\\\">\\r\\n            View on BSCScan\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={LinkExternal} href=\\\"https://pancakeswap.info\\\" bold={false} color=\\\"text\\\" target=\\\"blank\\\">\\r\\n            View on PCS Info\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem as={Link} to=\\\"/profile\\\">\\r\\n            Go to profile page\\r\\n          </SubMenuItem>\\r\\n          <SubMenuItem>Just button</SubMenuItem>\\r\\n        </SubMenu>\\r\\n      </Flex>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...Default.parameters };","export { default as AddIcon } from \"./Icons/Add\";\r\nexport { default as ArrowBackIcon } from \"./Icons/ArrowBack\";\r\nexport { default as ArrowDownIcon } from \"./Icons/ArrowDown\";\r\nexport { default as ArrowDropDownIcon } from \"./Icons/ArrowDropDown\";\r\nexport { default as ArrowDropUpIcon } from \"./Icons/ArrowDropUp\";\r\nexport { default as ArrowFirstIcon } from \"./Icons/ArrowFirst\";\r\nexport { default as ArrowForwardIcon } from \"./Icons/ArrowForward\";\r\nexport { default as ArrowLastIcon } from \"./Icons/ArrowLast\";\r\nexport { default as ArrowUpIcon } from \"./Icons/ArrowUp\";\r\nexport { default as AutoRenewIcon } from \"./Icons/AutoRenew\";\r\nexport { default as BinanceIcon } from \"./Icons/Binance\";\r\nexport { default as BinanceChainIcon } from \"./Icons/BinanceChain\";\r\nexport { default as BlockIcon } from \"./Icons/Block\";\r\nexport { default as BnbUsdtPairTokenIcon } from \"./Icons/BnbUsdtPairToken\";\r\nexport { default as BunnyCardsIcon } from \"./Icons/BunnyCards\";\r\nexport { default as BunnyPlaceholderIcon } from \"./Icons/BunnyPlaceholder\";\r\nexport { default as Cards } from \"./Icons/Cards\";\r\nexport { default as CardViewIcon } from \"./Icons/CardView\";\r\nexport { default as CalculateIcon } from \"./Icons/Calculate\";\r\nexport { default as CircleOutlineIcon } from \"./Icons/CircleOutline\";\r\nexport { default as ChartIcon } from \"./Icons/Chart\";\r\nexport { default as CheckmarkIcon } from \"./Icons/Checkmark\";\r\nexport { default as CheckmarkCircleIcon } from \"./Icons/CheckmarkCircle\";\r\nexport { default as CheckmarkCircleFillIcon } from \"./Icons/CheckmarkCircleFill\";\r\nexport { default as ChevronDownIcon } from \"./Icons/ChevronDown\";\r\nexport { default as ChevronLeftIcon } from \"./Icons/ChevronLeft\";\r\nexport { default as ChevronRightIcon } from \"./Icons/ChevronRight\";\r\nexport { default as ChevronUpIcon } from \"./Icons/ChevronUp\";\r\nexport { default as CloseIcon } from \"./Icons/Close\";\r\nexport { default as CogIcon } from \"./Icons/Cog\";\r\nexport { default as Coin98Icon } from \"./Icons/Coin98\";\r\nexport { default as CommunityIcon } from \"./Icons/Community\";\r\nexport { default as CopyIcon } from \"./Icons/Copy\";\r\nexport { default as CrownIcon } from \"./Icons/Crown\";\r\nexport { default as CurrencyIcon } from \"./Icons/Currency\";\r\nexport { default as ErrorIcon } from \"./Icons/Error\";\r\nexport { default as EllipsisIcon } from \"./Icons/Ellipsis\";\r\nexport { default as HelpIcon } from \"./Icons/Help\";\r\nexport { default as HistoryIcon } from \"./Icons/History\";\r\nexport { default as InfoIcon } from \"./Icons/Info\";\r\nexport { default as LanguageIcon } from \"./Icons/Language\";\r\nexport { default as LanguageCurrencyIcon } from \"./Icons/LanguageCurrency\";\r\nexport { default as LaurelLeftIcon } from \"./Icons/LaurelLeft\";\r\nexport { default as LaurelRightIcon } from \"./Icons/LaurelRight\";\r\nexport { default as ListViewIcon } from \"./Icons/ListView\";\r\nexport { default as LoginIcon } from \"./Icons/Login\";\r\nexport { default as LogoIcon } from \"./Icons/Logo\";\r\nexport { default as LogoRoundIcon } from \"./Icons/LogoRound\";\r\nexport { default as MathWalletIcon } from \"./Icons/MathWallet\";\r\nexport { default as LogoutIcon } from \"./Icons/Logout\";\r\nexport { default as MedalBronzeIcon } from \"./Icons/MedalBronze\";\r\nexport { default as MedalGoldIcon } from \"./Icons/MedalGold\";\r\nexport { default as MedalPurpleIcon } from \"./Icons/MedalPurple\";\r\nexport { default as MedalSilverIcon } from \"./Icons/MedalSilver\";\r\nexport { default as MedalTealIcon } from \"./Icons/MedalTeal\";\r\nexport { default as MetamaskIcon } from \"./Icons/Metamask\";\r\nexport { default as MinusIcon } from \"./Icons/Minus\";\r\nexport { default as MoreHorizontalIcon } from \"./Icons/MoreHorizontal\";\r\nexport { default as MoreVerticalIcon } from \"./Icons/MoreVertical\";\r\nexport { default as NoProfileAvatarIcon } from \"./Icons/NoProfileAvatar\";\r\nexport { default as OpenNewIcon } from \"./Icons/OpenNew\";\r\nexport { default as PancakesIcon } from \"./Icons/Pancakes\";\r\nexport { default as PencilIcon } from \"./Icons/Pencil\";\r\nexport { default as PancakeRoundIcon } from \"./Icons/PancakeRound\";\r\nexport { default as PocketWatchIcon } from \"./Icons/PocketWatch\";\r\nexport { default as PlayCircleOutlineIcon } from \"./Icons/PlayCircleOutline\";\r\nexport { default as PredictionsIcon } from \"../../widgets/Menu/icons/Predictions\";\r\nexport { default as PrizeIcon } from \"./Icons/Prize\";\r\nexport { default as ProposalIcon } from \"./Icons/Proposal\";\r\nexport { default as RemoveIcon } from \"./Icons/Remove\";\r\nexport { default as VerifiedIcon } from \"./Icons/Verified\";\r\nexport { default as ProgressBunny } from \"./Icons/ProgressBunny\";\r\nexport { default as PresentCheckIcon } from \"./Icons/PresentCheck\";\r\nexport { default as PresentWonIcon } from \"./Icons/PresentWon\";\r\nexport { default as PresentNoneIcon } from \"./Icons/PresentNone\";\r\nexport { default as RefreshIcon } from \"./Icons/Refresh\";\r\nexport { default as SafePalIcon } from \"./Icons/SafePal\";\r\nexport { default as SearchIcon } from \"./Icons/Search\";\r\nexport { default as SmallDotIcon } from \"./Icons/SmallDot\";\r\nexport { default as StarFillIcon } from \"./Icons/StarFill\";\r\nexport { default as StarLineIcon } from \"./Icons/StarLine\";\r\nexport { default as SwapIcon } from \"./Icons/Swap\";\r\nexport { default as SwapVertIcon } from \"./Icons/SwapVert\";\r\nexport { default as SyncAltIcon } from \"./Icons/SyncAlt\";\r\nexport { default as TeamPlayerIcon } from \"./Icons/TeamPlayer\";\r\nexport { default as TestnetIcon } from \"./Icons/Testnet\";\r\nexport { default as Ticket } from \"./Icons/Ticket\";\r\nexport { default as TicketFillIcon } from \"./Icons/TicketFill\";\r\nexport { default as TicketRound } from \"./Icons/TicketRound\";\r\nexport { default as TimerIcon } from \"./Icons/Timer\";\r\nexport { default as TokenPocketIcon } from \"./Icons/TokenPocket\";\r\nexport { default as TrophyGoldIcon } from \"./Icons/TrophyGold\";\r\nexport { default as TrustWalletIcon } from \"./Icons/TrustWallet\";\r\nexport { default as TuneIcon } from \"./Icons/Tune\";\r\nexport { default as VisibilityOff } from \"./Icons/VisibilityOff\";\r\nexport { default as VisibilityOn } from \"./Icons/VisibilityOn\";\r\nexport { default as VolumeOffIcon } from \"./Icons/VolumeOff\";\r\nexport { default as VolumeUpIcon } from \"./Icons/VolumeUp\";\r\nexport { default as VoteIcon } from \"./Icons/Vote\";\r\nexport { default as WarningIcon } from \"./Icons/Warning\";\r\nexport { default as WalletConnectIcon } from \"./Icons/WalletConnect\";\r\nexport { default as WalletIcon } from \"./Icons/Wallet\";\r\nexport { default as WalletFilledIcon } from \"./Icons/WalletFilled\";\r\nexport { default as WaitIcon } from \"./Icons/Wait\";\r\nexport { default as Svg } from \"./Svg\";\r\nexport type { SvgProps } from \"./types\";\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { capitalize } from \\\"lodash\\\";\\r\\nimport Box from \\\"../Box/Box\\\";\\r\\nimport Flex from \\\"../Box/Flex\\\";\\r\\nimport { CommunityIcon, RemoveIcon } from \\\"../Svg\\\";\\r\\nimport Tag from \\\"./Tag\\\";\\r\\nimport { scales, variants } from \\\"./types\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Components/Tag\\\",\\r\\n  argTypes: {},\\r\\n};\\r\\n\\r\\nexport const Default: React.FC = () => {\\r\\n  return (\\r\\n    <Box>\\r\\n      {Object.values(variants).map((variant) => {\\r\\n        return (\\r\\n          <Box key={variant} mb=\\\"32px \\\">\\r\\n            <Flex alignItems=\\\"center\\\">\\r\\n              {Object.values(scales).map((scale) => {\\r\\n                return (\\r\\n                  <Tag scale={scale} variant={variant} mr=\\\"8px\\\">\\r\\n                    {`${capitalize(variant)}: ${scale.toUpperCase()}`}\\r\\n                  </Tag>\\r\\n                );\\r\\n              })}\\r\\n              <Tag variant={variant} outline mr=\\\"8px\\\">\\r\\n                {`${capitalize(variant)} Outline`}\\r\\n              </Tag>\\r\\n              <Tag variant={variant} outline startIcon={<CommunityIcon />} mr=\\\"8px\\\">\\r\\n                {`${capitalize(variant)} Icon Left`}\\r\\n              </Tag>\\r\\n              <Tag variant={variant} outline endIcon={<RemoveIcon />} mr=\\\"8px\\\">\\r\\n                {`${capitalize(variant)} Icon Right`}\\r\\n              </Tag>\\r\\n              <Tag variant={variant} outline startIcon={<CommunityIcon />} endIcon={<RemoveIcon />}>\\r\\n                {`${capitalize(variant)} Both`}\\r\\n              </Tag>\\r\\n            </Flex>\\r\\n          </Box>\\r\\n        );\\r\\n      })}\\r\\n    </Box>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const TextVariations: React.FC = () => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Tag textTransform=\\\"uppercase\\\" mr=\\\"16px\\\">\\r\\n        uppercase\\r\\n      </Tag>\\r\\n      <Tag fontWeight=\\\"bold\\\" mr=\\\"16px\\\">\\r\\n        Bold\\r\\n      </Tag>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":33,\"line\":14},\"endLoc\":{\"col\":1,\"line\":46},\"startBody\":{\"col\":33,\"line\":14},\"endBody\":{\"col\":1,\"line\":46}},\"TextVariations\":{\"startLoc\":{\"col\":40,\"line\":48},\"endLoc\":{\"col\":1,\"line\":59},\"startBody\":{\"col\":40,\"line\":48},\"endBody\":{\"col\":1,\"line\":59}}};\n    \nimport React from \"react\";\r\nimport { capitalize } from \"lodash\";\r\nimport Box from \"../Box/Box\";\r\nimport Flex from \"../Box/Flex\";\r\nimport { CommunityIcon, RemoveIcon } from \"../Svg\";\r\nimport Tag from \"./Tag\";\r\nimport { scales, variants } from \"./types\";\r\n\r\nexport default {\r\n  title: \"Components/Tag\",\r\n  argTypes: {},\r\n};\r\n\r\nexport const Default: React.FC = () => {\r\n  return (\r\n    <Box>\r\n      {Object.values(variants).map((variant) => {\r\n        return (\r\n          <Box key={variant} mb=\"32px \">\r\n            <Flex alignItems=\"center\">\r\n              {Object.values(scales).map((scale) => {\r\n                return (\r\n                  <Tag scale={scale} variant={variant} mr=\"8px\">\r\n                    {`${capitalize(variant)}: ${scale.toUpperCase()}`}\r\n                  </Tag>\r\n                );\r\n              })}\r\n              <Tag variant={variant} outline mr=\"8px\">\r\n                {`${capitalize(variant)} Outline`}\r\n              </Tag>\r\n              <Tag variant={variant} outline startIcon={<CommunityIcon />} mr=\"8px\">\r\n                {`${capitalize(variant)} Icon Left`}\r\n              </Tag>\r\n              <Tag variant={variant} outline endIcon={<RemoveIcon />} mr=\"8px\">\r\n                {`${capitalize(variant)} Icon Right`}\r\n              </Tag>\r\n              <Tag variant={variant} outline startIcon={<CommunityIcon />} endIcon={<RemoveIcon />}>\r\n                {`${capitalize(variant)} Both`}\r\n              </Tag>\r\n            </Flex>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};;\r\n\r\nexport const TextVariations: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Tag textTransform=\"uppercase\" mr=\"16px\">\r\n        uppercase\r\n      </Tag>\r\n      <Tag fontWeight=\"bold\" mr=\"16px\">\r\n        Bold\r\n      </Tag>\r\n    </div>\r\n  );\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <Box>\\r\\n      {Object.values(variants).map((variant) => {\\r\\n        return (\\r\\n          <Box key={variant} mb=\\\"32px \\\">\\r\\n            <Flex alignItems=\\\"center\\\">\\r\\n              {Object.values(scales).map((scale) => {\\r\\n                return (\\r\\n                  <Tag scale={scale} variant={variant} mr=\\\"8px\\\">\\r\\n                    {`${capitalize(variant)}: ${scale.toUpperCase()}`}\\r\\n                  </Tag>\\r\\n                );\\r\\n              })}\\r\\n              <Tag variant={variant} outline mr=\\\"8px\\\">\\r\\n                {`${capitalize(variant)} Outline`}\\r\\n              </Tag>\\r\\n              <Tag variant={variant} outline startIcon={<CommunityIcon />} mr=\\\"8px\\\">\\r\\n                {`${capitalize(variant)} Icon Left`}\\r\\n              </Tag>\\r\\n              <Tag variant={variant} outline endIcon={<RemoveIcon />} mr=\\\"8px\\\">\\r\\n                {`${capitalize(variant)} Icon Right`}\\r\\n              </Tag>\\r\\n              <Tag variant={variant} outline startIcon={<CommunityIcon />} endIcon={<RemoveIcon />}>\\r\\n                {`${capitalize(variant)} Both`}\\r\\n              </Tag>\\r\\n            </Flex>\\r\\n          </Box>\\r\\n        );\\r\\n      })}\\r\\n    </Box>\\r\\n  );\\r\\n}\" }, ...Default.parameters };\nTextVariations.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <div>\\r\\n      <Tag textTransform=\\\"uppercase\\\" mr=\\\"16px\\\">\\r\\n        uppercase\\r\\n      </Tag>\\r\\n      <Tag fontWeight=\\\"bold\\\" mr=\\\"16px\\\">\\r\\n        Bold\\r\\n      </Tag>\\r\\n    </div>\\r\\n  );\\r\\n}\" }, ...TextVariations.parameters };","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport throttle from \"lodash/throttle\";\r\nimport Overlay from \"../../components/Overlay/Overlay\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport { useMatchBreakpoints } from \"../../hooks\";\r\nimport Logo from \"./components/Logo\";\r\nimport Panel from \"./components/Panel\";\r\nimport { NavProps } from \"./types\";\r\nimport { MENU_HEIGHT, SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"./config\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledNav = styled.nav<{ showMenu: boolean }>`\r\n  position: fixed;\r\n  top: ${({ showMenu }) => (showMenu ? 0 : `-${MENU_HEIGHT}px`)};\r\n  left: 0;\r\n  transition: top 0.2s;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 8px;\r\n  padding-right: 16px;\r\n  width: 100%;\r\n  height: ${MENU_HEIGHT}px;\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  border-bottom: solid 2px rgba(133, 133, 133, 0.1);\r\n  z-index: 20;\r\n  transform: translate3d(0, 0, 0);\r\n`;\r\n\r\nconst BodyWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n`;\r\n\r\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean }>`\r\n  flex-grow: 1;\r\n  margin-top: ${({ showMenu }) => (showMenu ? `${MENU_HEIGHT}px` : 0)};\r\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\r\n  transform: translate3d(0, 0, 0);\r\n  max-width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    margin-left: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\r\n    max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\r\n  }\r\n`;\r\n\r\nconst MobileOnlyOverlay = styled(Overlay)`\r\n  position: fixed;\r\n  height: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Menu: React.FC<NavProps> = ({\r\n  userMenu,\r\n  globalMenu,\r\n  isDark,\r\n  toggleTheme,\r\n  langs,\r\n  setLang,\r\n  currentLang,\r\n  cakePriceUsd,\r\n  links,\r\n  children,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints();\r\n  const isSmallerScreen = isMobile || isTablet;\r\n  const [isPushed, setIsPushed] = useState(!isSmallerScreen);\r\n  const [showMenu, setShowMenu] = useState(true);\r\n  const refPrevOffset = useRef(window.pageYOffset);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentOffset = window.pageYOffset;\r\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight;\r\n      const isTopOfPage = currentOffset === 0;\r\n      // Always show the menu when user reach the top\r\n      if (isTopOfPage) {\r\n        setShowMenu(true);\r\n      }\r\n      // Avoid triggering anything at the bottom because of layout shift\r\n      else if (!isBottomOfPage) {\r\n        if (currentOffset < refPrevOffset.current) {\r\n          // Has scroll up\r\n          setShowMenu(true);\r\n        } else {\r\n          // Has scroll down\r\n          setShowMenu(false);\r\n        }\r\n      }\r\n      refPrevOffset.current = currentOffset;\r\n    };\r\n    const throttledHandleScroll = throttle(handleScroll, 200);\r\n\r\n    window.addEventListener(\"scroll\", throttledHandleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\r\n    };\r\n  }, []);\r\n\r\n  // Find the home link if provided\r\n  const homeLink = links.find((link) => link.label === \"Home\");\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledNav showMenu={showMenu}>\r\n        <Logo\r\n          isPushed={isPushed}\r\n          togglePush={() => setIsPushed((prevState: boolean) => !prevState)}\r\n          isDark={isDark}\r\n          href={homeLink?.href ?? \"/\"}\r\n        />\r\n        <Flex>\r\n          {globalMenu} {userMenu}\r\n        </Flex>\r\n      </StyledNav>\r\n      <BodyWrapper>\r\n        <Panel\r\n          isPushed={isPushed}\r\n          isMobile={isSmallerScreen}\r\n          showMenu={showMenu}\r\n          isDark={isDark}\r\n          toggleTheme={toggleTheme}\r\n          langs={langs}\r\n          setLang={setLang}\r\n          currentLang={currentLang}\r\n          cakePriceUsd={cakePriceUsd}\r\n          pushNav={setIsPushed}\r\n          links={links}\r\n        />\r\n        <Inner isPushed={isPushed} showMenu={showMenu}>\r\n          {children}\r\n        </Inner>\r\n        <MobileOnlyOverlay show={isPushed} onClick={() => setIsPushed(false)} role=\"presentation\" />\r\n      </BodyWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { ReactNode, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MENU_ENTRY_HEIGHT } from \"../config\";\r\nimport { LinkLabel, LinkStatus as LinkStatusComponent, MenuEntry } from \"./MenuEntry\";\r\nimport { LinkStatus, PushedProps } from \"../types\";\r\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from \"../../../components/Svg\";\r\n\r\ninterface Props extends PushedProps {\r\n  label: string;\r\n  status?: LinkStatus;\r\n  icon: React.ReactElement;\r\n  initialOpenState?: boolean;\r\n  className?: string;\r\n  children: ReactNode;\r\n  isActive?: boolean;\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  // Safari fix\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst AccordionContent = styled.div<{ isOpen: boolean; isPushed: boolean; maxHeight: number }>`\r\n  max-height: ${({ isOpen, maxHeight }) => (isOpen ? `${maxHeight}px` : 0)};\r\n  transition: max-height 0.3s ease-out;\r\n  overflow: hidden;\r\n  border-color: ${({ isOpen, isPushed }) => (isOpen && isPushed ? \"rgba(133, 133, 133, 0.1)\" : \"transparent\")};\r\n  border-style: solid;\r\n  border-width: 1px 0;\r\n`;\r\n\r\nconst Accordion: React.FC<Props> = ({\r\n  label,\r\n  status,\r\n  icon,\r\n  isPushed,\r\n  pushNav,\r\n  initialOpenState = false,\r\n  children,\r\n  className,\r\n  isActive,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(initialOpenState);\r\n  const handleClick = () => {\r\n    if (isPushed) {\r\n      setIsOpen((prevState) => !prevState);\r\n    } else {\r\n      pushNav(true);\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <MenuEntry onClick={handleClick} className={className} isActive={isActive} role=\"button\">\r\n        {icon}\r\n        <LinkLabel isPushed={isPushed}>{label}</LinkLabel>\r\n        {status && (\r\n          <LinkStatusComponent color={status.color} fontSize=\"14px\">\r\n            {status.text}\r\n          </LinkStatusComponent>\r\n        )}\r\n        {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n      </MenuEntry>\r\n      <AccordionContent\r\n        isOpen={isOpen}\r\n        isPushed={isPushed}\r\n        maxHeight={React.Children.count(children) * MENU_ENTRY_HEIGHT}\r\n      >\r\n        {children}\r\n      </AccordionContent>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PancakeRoundIcon } from \"../../../components/Svg\";\r\nimport Text from \"../../../components/Text/Text\";\r\nimport Skeleton from \"../../../components/Skeleton/Skeleton\";\r\n\r\ninterface Props {\r\n  cakePriceUsd?: number;\r\n}\r\n\r\nconst PriceLink = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  svg {\r\n    transition: transform 0.3s;\r\n  }\r\n  :hover {\r\n    svg {\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst CakePrice: React.FC<Props> = ({ cakePriceUsd }) => {\r\n  return cakePriceUsd ? (\r\n    <PriceLink\r\n      href=\"https://pancakeswap.finance/swap?outputCurrency=0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82\"\r\n      target=\"_blank\"\r\n    >\r\n      <PancakeRoundIcon width=\"24px\" mr=\"8px\" />\r\n      <Text color=\"textSubtle\" bold>{`$${cakePriceUsd.toFixed(3)}`}</Text>\r\n    </PriceLink>\r\n  ) : (\r\n    <Skeleton width={80} height={24} />\r\n  );\r\n};\r\n\r\nexport default React.memo(CakePrice);\r\n","import React from \"react\";\r\nimport Text from \"../../../components/Text/Text\";\r\nimport Dropdown from \"../../../components/Dropdown/Dropdown\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport LanguageIcon from \"../../../components/Svg/Icons/Language\";\r\nimport { Language } from \"../types\";\r\nimport MenuButton from \"./MenuButton\";\r\n\r\ninterface Props {\r\n  currentLang: string;\r\n  langs: Language[];\r\n  setLang: (lang: Language) => void;\r\n}\r\n\r\nconst LangSelector: React.FC<Props> = ({ currentLang, langs, setLang }) => (\r\n  <Dropdown\r\n    position=\"top-right\"\r\n    target={\r\n      <Button variant=\"text\" startIcon={<LanguageIcon color=\"textSubtle\" width=\"24px\" />}>\r\n        <Text color=\"textSubtle\">{currentLang?.toUpperCase()}</Text>\r\n      </Button>\r\n    }\r\n  >\r\n    {langs.map((lang) => (\r\n      <MenuButton\r\n        key={lang.locale}\r\n        fullWidth\r\n        onClick={() => setLang(lang)}\r\n        // Safari fix\r\n        style={{ minHeight: \"32px\", height: \"auto\" }}\r\n      >\r\n        {lang.language}\r\n      </MenuButton>\r\n    ))}\r\n  </Dropdown>\r\n);\r\n\r\nexport default React.memo(LangSelector, (prev, next) => prev.currentLang === next.currentLang);\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LogoIcon } from \"../../../components/Svg\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"../icons\";\r\nimport MenuButton from \"./MenuButton\";\r\n\r\ninterface Props {\r\n  isPushed: boolean;\r\n  isDark: boolean;\r\n  togglePush: () => void;\r\n  href: string;\r\n}\r\n\r\nconst blink = keyframes`\r\n  0%,  100% { transform: scaleY(1); } \r\n  50% { transform:  scaleY(0.1); } \r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  .mobile-icon {\r\n    width: 32px;\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: none;\r\n    }\r\n  }\r\n  .desktop-icon {\r\n    width: 160px;\r\n    display: none;\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: block;\r\n    }\r\n  }\r\n  .right-eye {\r\n    animation-delay: 20ms;\r\n  }\r\n  &:hover {\r\n    .left-eye,\r\n    .right-eye {\r\n      transform-origin: center 60%;\r\n      animation-name: ${blink};\r\n      animation-duration: 350ms;\r\n      animation-iteration-count: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Logo: React.FC<Props> = ({ isPushed, togglePush, isDark, href }) => {\r\n  const isAbsoluteUrl = href.startsWith(\"http\");\r\n  const innerLogo = (\r\n    <>\r\n      <LogoIcon className=\"mobile-icon\" />\r\n      <LogoWithText className=\"desktop-icon\" isDark={isDark} />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Flex>\r\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush} mr=\"24px\">\r\n        {isPushed ? (\r\n          <HamburgerCloseIcon width=\"24px\" color=\"textSubtle\" />\r\n        ) : (\r\n          <HamburgerIcon width=\"24px\" color=\"textSubtle\" />\r\n        )}\r\n      </MenuButton>\r\n      {isAbsoluteUrl ? (\r\n        <StyledLink as=\"a\" href={href} aria-label=\"Pancake home page\">\r\n          {innerLogo}\r\n        </StyledLink>\r\n      ) : (\r\n        <StyledLink to={href} aria-label=\"Pancake home page\">\r\n          {innerLogo}\r\n        </StyledLink>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark);\r\n","import React from \"react\";\r\nimport styled, { keyframes, DefaultTheme } from \"styled-components\";\r\nimport { Text } from \"../../../components/Text\";\r\nimport { Colors } from \"../../../theme/types\";\r\nimport { MENU_ENTRY_HEIGHT } from \"../config\";\r\n\r\nexport interface Props {\r\n  secondary?: boolean;\r\n  isActive?: boolean;\r\n  theme: DefaultTheme;\r\n}\r\n\r\nconst rainbowAnimation = keyframes`\r\n  0%,\r\n  100% {\r\n    background-position: 0 0;\r\n  }\r\n  50% {\r\n    background-position: 100% 0;\r\n  }\r\n`;\r\n\r\nconst LinkLabel = styled.div<{ isPushed: boolean }>`\r\n  color: ${({ isPushed, theme }) => (isPushed ? theme.colors.textSubtle : \"transparent\")};\r\n  transition: color 0.4s;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst MenuEntry = styled.div<Props>`\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  height: ${MENU_ENTRY_HEIGHT}px;\r\n  padding: ${({ secondary }) => (secondary ? \"0 10px\" : \"0 6px\")};\r\n  font-size: ${({ secondary }) => (secondary ? \"14px\" : \"16px\")};\r\n  // background-color: ${({ secondary, theme }) => (secondary ? theme.colors.background : \"transparent\")};\r\n  background-color: \"transparent\"};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  box-shadow: ${({ isActive, theme }) => (isActive ? `0px 4px 0px ${theme.colors.primary}` : \"none\")};\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n\r\n  // Safari fix\r\n  flex-shrink: 0;\r\n\r\n  &.rainbow {\r\n    background-clip: text;\r\n    animation: ${rainbowAnimation} 3s ease-in-out infinite;\r\n    background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n    background-size: 400% 100%;\r\n  }\r\n`;\r\nMenuEntry.defaultProps = {\r\n  secondary: false,\r\n  isActive: false,\r\n};\r\n\r\nconst LinkStatus = styled(Text)<{ color: keyof Colors }>`\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  padding: 0 8px;\r\n  border: 2px solid;\r\n  border-color: ${({ theme, color }) => theme.colors[color]};\r\n  box-shadow: none;\r\n  color: ${({ theme, color }) => theme.colors[color]};\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst LinkLabelMemo = React.memo(LinkLabel, (prev, next) => prev.isPushed === next.isPushed);\r\n\r\nexport { MenuEntry, LinkStatus, LinkLabelMemo as LinkLabel };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PanelBody from \"./PanelBody\";\r\nimport PanelFooter from \"./PanelFooter\";\r\nimport { SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"../config\";\r\nimport { PanelProps, PushedProps } from \"../types\";\r\n\r\ninterface Props extends PanelProps, PushedProps {\r\n  showMenu: boolean;\r\n  isMobile: boolean;\r\n}\r\n\r\nconst StyledPanel = styled.div<{ isPushed: boolean; showMenu: boolean }>`\r\n  position: fixed;\r\n  padding-top: ${({ showMenu }) => (showMenu ? \"80px\" : 0)};\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  flex-shrink: 0;\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  width: ${({ isPushed }) => (isPushed ? `${SIDEBAR_WIDTH_FULL}px` : 0)};\r\n  height: 100%;\r\n  transition: padding-top 0.2s, width 0.2s cubic-bezier(0.4, 0, 0.2, 1);\r\n  border-right: ${({ isPushed }) => (isPushed ? \"2px solid rgba(133, 133, 133, 0.1)\" : 0)};\r\n  z-index: 11;\r\n  overflow: ${({ isPushed }) => (isPushed ? \"initial\" : \"hidden\")};\r\n  transform: translate3d(0, 0, 0);\r\n  ${({ isPushed }) => !isPushed && \"white-space: nowrap;\"};\r\n\r\n  ${({ theme }) => theme.mediaQueries.nav} {\r\n    border-right: 2px solid rgba(133, 133, 133, 0.1);\r\n    width: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\r\n  }\r\n`;\r\n\r\nconst Panel: React.FC<Props> = (props) => {\r\n  const { isPushed, showMenu } = props;\r\n  return (\r\n    <StyledPanel isPushed={isPushed} showMenu={showMenu}>\r\n      <PanelBody {...props} />\r\n      <PanelFooter {...props} />\r\n    </StyledPanel>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { SvgProps } from \"../../../components/Svg\";\r\nimport * as IconModule from \"../icons\";\r\nimport Accordion from \"./Accordion\";\r\nimport { MenuEntry, LinkLabel, LinkStatus } from \"./MenuEntry\";\r\nimport MenuLink from \"./MenuLink\";\r\nimport { PanelProps, PushedProps } from \"../types\";\r\n\r\ninterface Props extends PanelProps, PushedProps {\r\n  isMobile: boolean;\r\n}\r\n\r\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> };\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  height: 100%;\r\n`;\r\n\r\nconst PanelBody: React.FC<Props> = ({ isPushed, pushNav, isMobile, links }) => {\r\n  const location = useLocation();\r\n\r\n  // Close the menu when a user clicks a link on mobile\r\n  const handleClick = isMobile ? () => pushNav(false) : undefined;\r\n\r\n  return (\r\n    <Container>\r\n      {links.map((entry) => {\r\n        const Icon = Icons[entry.icon];\r\n        const iconElement = <Icon width=\"24px\" mr=\"8px\" />;\r\n        const calloutClass = entry.calloutClass ? entry.calloutClass : undefined;\r\n\r\n        if (entry.items) {\r\n          const itemsMatchIndex = entry.items.findIndex((item) => item.href === location.pathname);\r\n          const initialOpenState = entry.initialOpenState === true ? entry.initialOpenState : itemsMatchIndex >= 0;\r\n\r\n          return (\r\n            <Accordion\r\n              key={entry.label}\r\n              isPushed={isPushed}\r\n              pushNav={pushNav}\r\n              icon={iconElement}\r\n              label={entry.label}\r\n              status={entry.status}\r\n              initialOpenState={initialOpenState}\r\n              className={calloutClass}\r\n              isActive={entry.items.some((item) => item.href === location.pathname)}\r\n            >\r\n              {isPushed &&\r\n                entry.items.map((item) => (\r\n                  <MenuEntry key={item.href} secondary isActive={item.href === location.pathname} onClick={handleClick}>\r\n                    <MenuLink href={item.href}>\r\n                      <LinkLabel isPushed={isPushed}>{item.label}</LinkLabel>\r\n                      {item.status && (\r\n                        <LinkStatus color={item.status.color} fontSize=\"14px\">\r\n                          {item.status.text}\r\n                        </LinkStatus>\r\n                      )}\r\n                    </MenuLink>\r\n                  </MenuEntry>\r\n                ))}\r\n            </Accordion>\r\n          );\r\n        }\r\n        return (\r\n          <MenuEntry key={entry.label} isActive={entry.href === location.pathname} className={calloutClass}>\r\n            <MenuLink href={entry.href} onClick={handleClick}>\r\n              {iconElement}\r\n              <LinkLabel isPushed={isPushed}>{entry.label}</LinkLabel>\r\n              {entry.status && (\r\n                <LinkStatus color={entry.status.color} fontSize=\"14px\">\r\n                  {entry.status.text}\r\n                </LinkStatus>\r\n              )}\r\n            </MenuLink>\r\n          </MenuEntry>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PanelBody;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CogIcon } from \"../../../components/Svg\";\r\nimport IconButton from \"../../../components/Button/IconButton\";\r\nimport { MENU_ENTRY_HEIGHT } from \"../config\";\r\nimport { PanelProps, PushedProps } from \"../types\";\r\nimport CakePrice from \"./CakePrice\";\r\nimport ThemeSwitcher from \"./ThemeSwitcher\";\r\nimport SocialLinks from \"./SocialLinks\";\r\nimport LangSelector from \"./LangSelector\";\r\n\r\ninterface Props extends PanelProps, PushedProps {}\r\n\r\nconst Container = styled.div`\r\n  flex: none;\r\n  padding: 8px 4px;\r\n  background-color: ${({ theme }) => theme.nav.background};\r\n  border-top: solid 2px rgba(133, 133, 133, 0.1);\r\n`;\r\n\r\nconst SettingsEntry = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: ${MENU_ENTRY_HEIGHT}px;\r\n  padding: 0 8px;\r\n`;\r\n\r\nconst SocialEntry = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: ${MENU_ENTRY_HEIGHT}px;\r\n  padding: 0 16px;\r\n`;\r\n\r\nconst PanelFooter: React.FC<Props> = ({\r\n  isPushed,\r\n  pushNav,\r\n  toggleTheme,\r\n  isDark,\r\n  cakePriceUsd,\r\n  currentLang,\r\n  langs,\r\n  setLang,\r\n}) => {\r\n  if (!isPushed) {\r\n    return (\r\n      <Container>\r\n        <IconButton variant=\"text\" onClick={() => pushNav(true)}>\r\n          <CogIcon />\r\n        </IconButton>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SocialEntry>\r\n        <CakePrice cakePriceUsd={cakePriceUsd} />\r\n        <SocialLinks />\r\n      </SocialEntry>\r\n      <SettingsEntry>\r\n        <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\r\n        <LangSelector currentLang={currentLang} langs={langs} setLang={setLang} />\r\n      </SettingsEntry>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PanelFooter;\r\n","import React from \"react\";\r\nimport { SvgProps } from \"../../../components/Svg\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\nimport Dropdown from \"../../../components/Dropdown/Dropdown\";\r\nimport Link from \"../../../components/Link/Link\";\r\nimport * as IconModule from \"../icons\";\r\nimport { socials } from \"../config\";\r\n\r\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> };\r\n\r\nconst SocialLinks: React.FC = () => (\r\n  <Flex>\r\n    {socials.map((social, index) => {\r\n      const Icon = Icons[social.icon];\r\n      const iconProps = { width: \"24px\", color: \"textSubtle\", style: { cursor: \"pointer\" } };\r\n      const mr = index < socials.length - 1 ? \"24px\" : 0;\r\n      if (social.items) {\r\n        return (\r\n          <Dropdown key={social.label} position=\"top\" target={<Icon {...iconProps} mr={mr} />}>\r\n            {social.items.map((item) => (\r\n              <Link external key={item.label} href={item.href} aria-label={item.label} color=\"textSubtle\">\r\n                {item.label}\r\n              </Link>\r\n            ))}\r\n          </Dropdown>\r\n        );\r\n      }\r\n      return (\r\n        <Link external key={social.label} href={social.href} aria-label={social.label} mr={mr}>\r\n          <Icon {...iconProps} />\r\n        </Link>\r\n      );\r\n    })}\r\n  </Flex>\r\n);\r\n\r\nexport default React.memo(SocialLinks, () => true);\r\n","import React from \"react\";\r\nimport { SvgProps } from \"../../../components/Svg\";\r\nimport Text from \"../../../components/Text/Text\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport * as IconModule from \"../icons\";\r\n\r\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> };\r\nconst { MoonIcon, SunIcon } = Icons;\r\n\r\ninterface Props {\r\n  isDark: boolean;\r\n  toggleTheme: (isDark: boolean) => void;\r\n}\r\n\r\nconst ThemeSwitcher: React.FC<Props> = ({ isDark, toggleTheme }) => (\r\n  <Button variant=\"text\" onClick={() => toggleTheme(!isDark)}>\r\n    {/* alignItems center is a Safari fix */}\r\n    <Flex alignItems=\"center\">\r\n      <SunIcon color={isDark ? \"textDisabled\" : \"text\"} width=\"24px\" />\r\n      <Text color=\"textDisabled\" mx=\"4px\">\r\n        /\r\n      </Text>\r\n      <MoonIcon color={isDark ? \"text\" : \"textDisabled\"} width=\"24px\" />\r\n    </Flex>\r\n  </Button>\r\n);\r\n\r\nexport default React.memo(ThemeSwitcher, (prev, next) => prev.isDark === next.isDark);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Variant, variants } from \"./types\";\r\nimport { Image } from \"../../../../components/Image\";\r\nimport { RefreshIcon, WalletFilledIcon, WarningIcon } from \"../../../../components/Svg\";\r\nimport { Colors } from \"../../../../theme/types\";\r\n\r\nconst MenuIconWrapper = styled.div<{ borderColor: keyof Colors }>`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  border-color: ${({ theme, borderColor }) => theme.colors[borderColor]};\r\n  border-radius: 50%;\r\n  border-style: solid;\r\n  border-width: 2px;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: absolute;\r\n  top: -4px;\r\n  width: 40px;\r\n  z-index: 102;\r\n`;\r\n\r\nconst ProfileIcon = styled(Image)`\r\n  left: 0;\r\n  position: absolute;\r\n  top: -4px;\r\n  z-index: 102;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nexport const NoProfileMenuIcon: React.FC = () => (\r\n  <MenuIconWrapper borderColor=\"primary\">\r\n    <WalletFilledIcon color=\"primary\" width=\"24px\" />\r\n  </MenuIconWrapper>\r\n);\r\n\r\nexport const PendingMenuIcon: React.FC = () => (\r\n  <MenuIconWrapper borderColor=\"secondary\">\r\n    <RefreshIcon color=\"secondary\" width=\"24px\" spin />\r\n  </MenuIconWrapper>\r\n);\r\n\r\nexport const WarningMenuIcon: React.FC = () => (\r\n  <MenuIconWrapper borderColor=\"warning\">\r\n    <WarningIcon color=\"warning\" width=\"24px\" />\r\n  </MenuIconWrapper>\r\n);\r\n\r\nexport const DangerMenuIcon: React.FC = () => (\r\n  <MenuIconWrapper borderColor=\"failure\">\r\n    <WarningIcon color=\"failure\" width=\"24px\" />\r\n  </MenuIconWrapper>\r\n);\r\n\r\nconst MenuIcon: React.FC<{ avatarSrc?: string; variant: Variant }> = ({ avatarSrc, variant }) => {\r\n  if (variant === variants.DANGER) {\r\n    return <DangerMenuIcon />;\r\n  }\r\n\r\n  if (variant === variants.WARNING) {\r\n    return <WarningMenuIcon />;\r\n  }\r\n\r\n  if (variant === variants.PENDING) {\r\n    return <PendingMenuIcon />;\r\n  }\r\n\r\n  if (!avatarSrc) {\r\n    return <NoProfileMenuIcon />;\r\n  }\r\n\r\n  return <ProfileIcon src={avatarSrc} height={40} width={40} />;\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { usePopper } from \"react-popper\";\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../../../../components/Box/Flex\";\r\nimport { ChevronDownIcon } from \"../../../../components/Svg\";\r\nimport isTouchDevice from \"../../../../util/isTouchDevice\";\r\nimport { UserMenuProps, variants } from \"./types\";\r\nimport MenuIcon from \"./MenuIcon\";\r\nimport { UserMenuItem } from \"./styles\";\r\n\r\nconst StyledUserMenu = styled(Flex)`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  height: 32px;\r\n  padding-left: 40px;\r\n  padding-right: 8px;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    opacity: 0.65;\r\n  }\r\n`;\r\n\r\nconst LabelText = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: none;\r\n  font-weight: 600;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n    margin-left: 8px;\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.div<{ isOpen: boolean }>`\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 16px;\r\n  padding-bottom: 4px;\r\n  padding-top: 4px;\r\n  pointer-events: auto;\r\n  width: 280px;\r\n  visibility: visible;\r\n  z-index: 1001;\r\n\r\n  ${({ isOpen }) =>\r\n    !isOpen &&\r\n    `\r\n    pointer-events: none;\r\n    visibility: hidden;\r\n  `}\r\n\r\n  ${UserMenuItem}:first-child {\r\n    border-radius: 8px 8px 0 0;\r\n  }\r\n\r\n  ${UserMenuItem}:last-child {\r\n    border-radius: 0 0 8px 8px;\r\n  }\r\n`;\r\n\r\nconst UserMenu: React.FC<UserMenuProps> = ({\r\n  account,\r\n  text,\r\n  avatarSrc,\r\n  variant = variants.DEFAULT,\r\n  children,\r\n  ...props\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [targetRef, setTargetRef] = useState<HTMLDivElement | null>(null);\r\n  const [tooltipRef, setTooltipRef] = useState<HTMLDivElement | null>(null);\r\n  const hideTimeout = useRef<number>();\r\n  const isHoveringOverTooltip = useRef(false);\r\n  const accountEllipsis = account ? `${account.substring(0, 2)}...${account.substring(account.length - 4)}` : null;\r\n  const { styles, attributes } = usePopper(targetRef, tooltipRef, {\r\n    placement: \"bottom-end\",\r\n    modifiers: [{ name: \"offset\", options: { offset: [0, 12] } }],\r\n  });\r\n\r\n  /**\r\n   * See \"useTooltip\"\r\n   */\r\n  useEffect(() => {\r\n    const showTooltip = (evt: MouseEvent | TouchEvent) => {\r\n      setIsOpen(true);\r\n\r\n      if (evt.target === targetRef) {\r\n        clearTimeout(hideTimeout.current);\r\n      }\r\n\r\n      if (evt.target === tooltipRef) {\r\n        isHoveringOverTooltip.current = true;\r\n      }\r\n    };\r\n\r\n    const hideTooltip = (evt: MouseEvent | TouchEvent) => {\r\n      if (hideTimeout.current) {\r\n        window.clearTimeout(hideTimeout.current);\r\n      }\r\n\r\n      if (evt.target === tooltipRef) {\r\n        isHoveringOverTooltip.current = false;\r\n      }\r\n\r\n      if (!isHoveringOverTooltip.current) {\r\n        hideTimeout.current = window.setTimeout(() => {\r\n          if (!isHoveringOverTooltip.current) {\r\n            setIsOpen(false);\r\n          }\r\n        }, 150);\r\n      }\r\n    };\r\n\r\n    const toggleTouch = (evt: TouchEvent) => {\r\n      const target = evt.target as Node;\r\n      const isTouchingTargetRef = target && targetRef?.contains(target);\r\n      const isTouchingTooltipRef = target && tooltipRef?.contains(target);\r\n\r\n      if (isTouchingTargetRef) {\r\n        setIsOpen((prevOpen) => !prevOpen);\r\n      } else if (isTouchingTooltipRef) {\r\n        // Don't close the menu immediately so it catches the event\r\n        setTimeout(() => {\r\n          setIsOpen(false);\r\n        }, 100);\r\n      } else {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isTouchDevice()) {\r\n      document.addEventListener(\"touchstart\", toggleTouch);\r\n    } else {\r\n      targetRef?.addEventListener(\"mouseenter\", showTooltip);\r\n      targetRef?.addEventListener(\"mouseleave\", hideTooltip);\r\n      tooltipRef?.addEventListener(\"mouseenter\", showTooltip);\r\n      tooltipRef?.addEventListener(\"mouseleave\", hideTooltip);\r\n    }\r\n\r\n    return () => {\r\n      if (isTouchDevice()) {\r\n        document.removeEventListener(\"touchstart\", toggleTouch);\r\n      } else {\r\n        targetRef?.removeEventListener(\"mouseenter\", showTooltip);\r\n        targetRef?.removeEventListener(\"mouseleave\", hideTooltip);\r\n        tooltipRef?.removeEventListener(\"mouseenter\", showTooltip);\r\n        tooltipRef?.removeEventListener(\"mouseleave\", hideTooltip);\r\n      }\r\n    };\r\n  }, [targetRef, tooltipRef, hideTimeout, isHoveringOverTooltip, setIsOpen]);\r\n\r\n  return (\r\n    <>\r\n      <StyledUserMenu ref={setTargetRef} {...props}>\r\n        <MenuIcon avatarSrc={avatarSrc} variant={variant} />\r\n        <LabelText title={text || account}>{text || accountEllipsis}</LabelText>\r\n        <ChevronDownIcon color=\"text\" width=\"24px\" />\r\n      </StyledUserMenu>\r\n      <Menu style={styles.popper} ref={setTooltipRef} {...attributes.popper} isOpen={isOpen}>\r\n        {children}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n","import { LinkStatus } from \"./types\";\r\n\r\nexport const status = {\r\n  LIVE: <LinkStatus>{\r\n    text: \"LIVE\",\r\n    color: \"failure\",\r\n  },\r\n  SOON: <LinkStatus>{\r\n    text: \"SOON\",\r\n    color: \"warning\",\r\n  },\r\n  NEW: <LinkStatus>{\r\n    text: \"NEW\",\r\n    color: \"success\",\r\n  },\r\n};\r\n\r\nexport const links = [\r\n  {\r\n    label: \"Home\",\r\n    icon: \"HomeIcon\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    label: \"Trade\",\r\n    icon: \"TradeIcon\",\r\n    items: [\r\n      {\r\n        label: \"Exchange\",\r\n        href: \"https://exchange.pancakeswap.finance\",\r\n      },\r\n      {\r\n        label: \"Liquidity\",\r\n        href: \"https://exchange.pancakeswap.finance/#/pool\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Farms\",\r\n    icon: \"FarmIcon\",\r\n    href: \"/farms\",\r\n    status: status.LIVE,\r\n  },\r\n  {\r\n    label: \"Pools\",\r\n    icon: \"PoolIcon\",\r\n    href: \"/syrup\",\r\n  },\r\n  {\r\n    label: \"Lottery\",\r\n    icon: \"TicketIcon\",\r\n    href: \"/lottery\",\r\n  },\r\n  {\r\n    label: \"NFT\",\r\n    icon: \"NftIcon\",\r\n    href: \"/nft\",\r\n  },\r\n  {\r\n    label: \"Team Battle\",\r\n    icon: \"TeamBattleIcon\",\r\n    href: \"/competition\",\r\n    status: status.SOON,\r\n  },\r\n  {\r\n    label: \"Profile & Teams\",\r\n    icon: \"GroupsIcon\",\r\n    status: status.LIVE,\r\n    items: [\r\n      {\r\n        label: \"Leaderboard\",\r\n        href: \"/teams\",\r\n        status: status.NEW,\r\n      },\r\n      {\r\n        label: \"YourProfile\",\r\n        href: \"/\",\r\n      },\r\n    ],\r\n    calloutClass: \"rainbow\",\r\n  },\r\n  {\r\n    label: \"Info\",\r\n    icon: \"InfoIcon\",\r\n    items: [\r\n      {\r\n        label: \"Overview\",\r\n        href: \"https://pancakeswap.info\",\r\n      },\r\n      {\r\n        label: \"Tokens\",\r\n        href: \"https://pancakeswap.info/tokens\",\r\n      },\r\n      {\r\n        label: \"Pairs\",\r\n        href: \"https://pancakeswap.info/pairs\",\r\n      },\r\n      {\r\n        label: \"Accounts\",\r\n        href: \"https://pancakeswap.info/accounts\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"IFO\",\r\n    icon: \"IfoIcon\",\r\n    items: [\r\n      {\r\n        label: \"Next\",\r\n        href: \"/ifo\",\r\n      },\r\n      {\r\n        label: \"History\",\r\n        href: \"/ifo/history\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"More\",\r\n    icon: \"MoreIcon\",\r\n    items: [\r\n      {\r\n        label: \"Voting\",\r\n        href: \"https://voting.pancakeswap.finance\",\r\n      },\r\n      {\r\n        label: \"Github\",\r\n        href: \"https://github.com/pancakeswap\",\r\n      },\r\n      {\r\n        label: \"Docs\",\r\n        href: \"https://docs.pancakeswap.finance\",\r\n      },\r\n      {\r\n        label: \"Blog\",\r\n        href: \"https://pancakeswap.medium.com\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const socials = [\r\n  {\r\n    label: \"Telegram\",\r\n    icon: \"TelegramIcon\",\r\n    items: [\r\n      {\r\n        label: \"English\",\r\n        href: \"https://t.me/pancakeswap\",\r\n      },\r\n      {\r\n        label: \"Bahasa Indonesia\",\r\n        href: \"https://t.me/PancakeSwapIndonesia\",\r\n      },\r\n      {\r\n        label: \"中文\",\r\n        href: \"https://t.me/PancakeSwap_CN\",\r\n      },\r\n      {\r\n        label: \"Tiếng Việt\",\r\n        href: \"https://t.me/PancakeSwapVN\",\r\n      },\r\n      {\r\n        label: \"Italiano\",\r\n        href: \"https://t.me/pancakeswap_ita\",\r\n      },\r\n      {\r\n        label: \"русский\",\r\n        href: \"https://t.me/pancakeswap_ru\",\r\n      },\r\n      {\r\n        label: \"Türkiye\",\r\n        href: \"https://t.me/pancakeswapturkiye\",\r\n      },\r\n      {\r\n        label: \"Português\",\r\n        href: \"https://t.me/PancakeSwapPortuguese\",\r\n      },\r\n      {\r\n        label: \"Español\",\r\n        href: \"https://t.me/PancakeswapEs\",\r\n      },\r\n      {\r\n        label: \"日本語\",\r\n        href: \"https://t.me/pancakeswapjp\",\r\n      },\r\n      {\r\n        label: \"Français\",\r\n        href: \"https://t.me/pancakeswapfr\",\r\n      },\r\n      {\r\n        label: \"Announcements\",\r\n        href: \"https://t.me/PancakeSwapAnn\",\r\n      },\r\n      {\r\n        label: \"Whale Alert\",\r\n        href: \"https://t.me/PancakeSwapWhales\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: \"Twitter\",\r\n    icon: \"TwitterIcon\",\r\n    href: \"https://twitter.com/pancakeswap\",\r\n  },\r\n];\r\n\r\nexport const MENU_HEIGHT = 64;\r\nexport const MENU_ENTRY_HEIGHT = 32;\r\nexport const SIDEBAR_WIDTH_FULL = 240;\r\nexport const SIDEBAR_WIDTH_REDUCED = 56;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M13.7803 2.71967C14.0732 3.01256 14.0732 3.48744 13.7803 3.78033L12.8107 4.75L14.0307 5.96999H20C21.1 5.96999 22 6.86999 22 7.96999V12.73C21.28 12.25 20.43 11.97 19.5 11.97C17.19 11.97 15.3 13.73 15.05 15.97H11.91C11.96 15.64 12 15.31 12 14.97C12 13.43 11.41 12.03 10.46 10.97H11C12.1 10.97 13 10.07 13 8.96999V7.06068L11.75 5.81066L10.7803 6.78033C10.4874 7.07322 10.0126 7.07322 9.71967 6.78033C9.42678 6.48744 9.42678 6.01256 9.71967 5.71967L12.7197 2.71967C13.0126 2.42678 13.4874 2.42678 13.7803 2.71967Z\" />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M11 15C11 17.7614 8.76142 20 6 20C3.23858 20 1 17.7614 1 15C1 12.2386 3.23858 10 6 10C8.76142 10 11 12.2386 11 15ZM9 15C9 16.6569 7.65685 18 6 18C4.34315 18 3 16.6569 3 15C3 13.3431 4.34315 12 6 12C7.65685 12 9 13.3431 9 15Z\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M19.5 12.97C17.57 12.97 16 14.54 16 16.47C16 18.4 17.57 19.97 19.5 19.97C21.43 19.97 23 18.4 23 16.47C23 14.54 21.43 12.97 19.5 12.97ZM19.5 17.97C18.67 17.97 18 17.3 18 16.47C18 15.64 18.67 14.97 19.5 14.97C20.33 14.97 21 15.64 21 16.47C21 17.3 20.33 17.97 19.5 17.97Z\"\r\n      />\r\n      <path d=\"M9 8.96997H4C3.45 8.96997 3 8.52997 3 7.96997C3 7.41997 3.45 6.96997 4 6.96997H7C8.1 6.96997 9 7.86997 9 8.96997Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 12.75C13.63 12.75 15.07 13.14 16.24 13.65C17.32 14.13 18 15.21 18 16.38V17C18 17.55 17.55 18 17 18H7C6.45 18 6 17.55 6 17V16.39C6 15.21 6.68 14.13 7.76 13.66C8.93 13.14 10.37 12.75 12 12.75ZM4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V17C0 17.55 0.45 18 1 18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H23C23.55 18 24 17.55 24 17V16.43ZM12 6C13.66 6 15 7.34 15 9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9C9 7.34 10.34 6 12 6Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M9.99998 19V14H14V19C14 19.55 14.45 20 15 20H18C18.55 20 19 19.55 19 19V12H20.7C21.16 12 21.38 11.43 21.03 11.13L12.67 3.59997C12.29 3.25997 11.71 3.25997 11.33 3.59997L2.96998 11.13C2.62998 11.43 2.83998 12 3.29998 12H4.99998V19C4.99998 19.55 5.44998 20 5.99998 20H8.99998C9.54998 20 9.99998 19.55 9.99998 19Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M21.9 8.89L20.85 4.52C20.63 3.62 19.85 3 18.94 3H16.73H14.72H13H11H9.28001H7.26001H5.05001C4.15001 3 3.36001 3.63 3.15001 4.52L2.10001 8.89C1.86001 9.91 2.08001 10.95 2.72001 11.77C2.80001 11.88 2.91001 11.96 3.00001 12.06V19C3.00001 20.1 3.90001 21 5.00001 21H19C20.1 21 21 20.1 21 19V12.06C21.09 11.97 21.2 11.88 21.28 11.78C21.92 10.96 22.15 9.91 21.9 8.89ZM7.02001 5L6.44001 9.86C6.36001 10.51 5.84001 11 5.23001 11C4.74001 11 4.43001 10.71 4.30001 10.53C4.04001 10.2 3.95001 9.77 4.05001 9.36L5.05001 5H7.02001ZM18.91 4.99L19.96 9.36C20.06 9.78 19.97 10.2 19.71 10.53C19.57 10.71 19.27 11 18.77 11C18.16 11 17.63 10.51 17.56 9.86L16.98 5L18.91 4.99ZM15.51 9.52C15.56 9.91 15.44 10.3 15.18 10.59C14.95 10.85 14.63 11 14.22 11C13.55 11 13 10.41 13 9.69V5H14.96L15.51 9.52ZM11 9.69C11 10.41 10.45 11 9.71001 11C9.37001 11 9.06001 10.85 8.82001 10.59C8.57001 10.3 8.45001 9.91 8.49001 9.52L9.04001 5H11V9.69ZM18 19H6.00001C5.45001 19 5.00001 18.55 5.00001 18V12.97C5.08001 12.98 5.15001 13 5.23001 13C6.10001 13 6.89001 12.64 7.47001 12.05C8.07001 12.65 8.87001 13 9.78001 13C10.65 13 11.43 12.64 12.01 12.07C12.6 12.64 13.4 13 14.3 13C15.14 13 15.94 12.65 16.54 12.05C17.12 12.64 17.91 13 18.78 13C18.86 13 18.93 12.98 19.01 12.97V18C19 18.55 18.55 19 18 19Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M5 7C5 6.44772 4.55228 6 4 6C3.44772 6 3 6.44772 3 7V18C3 19.1046 3.89543 20 5 20H20C20.5523 20 21 19.5523 21 19C21 18.4477 20.5523 18 20 18H5V7Z\" />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M19 17H7C6.44772 17 6 16.5523 6 16V12C6 11.4477 6.44772 11 7 11H10V10C10 9.44772 10.4477 9 11 9H14V7C14 6.44772 14.4477 6 15 6H19C19.5523 6 20 6.44772 20 7V16C20 16.5523 19.5523 17 19 17ZM16 8H18V15H16V8ZM12 15H14V11H12V15ZM10 13H8V15H10V13Z\"\r\n      />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M4.1534 13.6089L4.15362 13.61C4.77322 16.8113 7.42207 19.3677 10.647 19.8853L10.6502 19.8858C13.0412 20.2736 15.2625 19.6103 16.9422 18.2833C11.3549 16.2878 7.9748 10.3524 9.26266 4.48816C5.69846 5.77194 3.35817 9.51245 4.1534 13.6089ZM10.0083 2.21054C4.76622 3.2533 1.09895 8.36947 2.19006 13.9901C2.97006 18.0201 6.28006 21.2101 10.3301 21.8601C13.8512 22.4311 17.0955 21.1608 19.2662 18.8587C19.2765 18.8478 19.2866 18.837 19.2968 18.8261C19.4385 18.6745 19.5757 18.5184 19.7079 18.3581C19.7105 18.355 19.713 18.3519 19.7156 18.3487C19.8853 18.1426 20.0469 17.9295 20.2001 17.7101C20.4101 17.4001 20.2401 16.9601 19.8701 16.9201C19.5114 16.8796 19.1602 16.8209 18.817 16.7452C18.7964 16.7406 18.7758 16.736 18.7552 16.7313C18.6676 16.7114 18.5804 16.6903 18.4938 16.6681C18.4919 16.6676 18.4901 16.6672 18.4882 16.6667C13.0234 15.2647 9.72516 9.48006 11.4542 4.03417C11.4549 4.03214 11.4555 4.03012 11.4562 4.0281C11.4875 3.92954 11.5205 3.83109 11.5552 3.73278C11.5565 3.72911 11.5578 3.72543 11.5591 3.72175C11.6768 3.38921 11.8136 3.05829 11.9701 2.73005C12.1301 2.39005 11.8501 2.01005 11.4701 2.03005C11.1954 2.04379 10.924 2.06848 10.6561 2.10368C10.6517 2.10427 10.6472 2.10486 10.6428 2.10545C10.4413 2.13221 10.2418 2.16492 10.0446 2.2034C10.0325 2.20576 10.0204 2.20814 10.0083 2.21054Z\"\r\n      />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M6 10C4.9 10 4 10.9 4 12C4 13.1 4.9 14 6 14C7.1 14 8 13.1 8 12C8 10.9 7.1 10 6 10ZM18 10C16.9 10 16 10.9 16 12C16 13.1 16.9 14 18 14C19.1 14 20 13.1 20 12C20 10.9 19.1 10 18 10ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12.8533 3.39627C12.4634 2.75821 11.5366 2.75821 11.1467 3.39627L7.42977 9.47855C7.02256 10.1449 7.50213 11 8.28306 11H15.7169C16.4979 11 16.9774 10.1449 16.5702 9.47855L12.8533 3.39627ZM12 5.84L13.93 9H10.06L12 5.84ZM17.5 13C15.01 13 13 15.01 13 17.5C13 19.99 15.01 22 17.5 22C19.99 22 22 19.99 22 17.5C22 15.01 19.99 13 17.5 13ZM17.5 20C16.12 20 15 18.88 15 17.5C15 16.12 16.12 15 17.5 15C18.88 15 20 16.12 20 17.5C20 18.88 18.88 20 17.5 20ZM3 19.5C3 20.6046 3.89543 21.5 5 21.5H9C10.1046 21.5 11 20.6046 11 19.5V15.5C11 14.3954 10.1046 13.5 9 13.5H5C3.89543 13.5 3 14.3954 3 15.5V19.5ZM5 15.5H9V19.5H5V15.5Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M7.5 13C7.5 11.8954 8.39543 11 9.5 11H12.5C13.6046 11 14.5 11.8954 14.5 13V15C14.5 16.1046 13.6046 17 12.5 17H9.5C8.39543 17 7.5 16.1046 7.5 15V13Z\" />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M9.5 2C8.39543 2 7.5 2.89543 7.5 4V6.49482C7.5 6.93167 7.2113 7.30895 6.81834 7.49981C5.15004 8.31009 4 10.0207 4 12V17C4 19.2091 5.79086 21 8 21H14C16.2091 21 18 19.2091 18 17V12C18 11.4175 17.9004 10.8583 17.7173 10.3385L17.7892 10.297C19.4786 9.32167 20.0574 7.16153 19.082 5.47221C18.1552 3.86682 16.1534 3.25957 14.5 4.05146V4C14.5 2.89543 13.6046 2 12.5 2H9.5ZM9.5 6.25V4H12.5V6.25H9.5ZM9.22663 7.75C8.89473 8.46917 8.30318 9.00205 7.69211 9.29884C6.68638 9.78731 6 10.8154 6 12V17C6 18.1046 6.89543 19 8 19H14C15.1046 19 16 18.1046 16 17V12C16 10.8154 15.3136 9.78731 14.3079 9.29884C13.6968 9.00205 13.1053 8.46917 12.7734 7.75H9.22663ZM14.5 6.3226V6.49482C14.5 6.93167 14.7887 7.30895 15.1817 7.49981C15.7529 7.77726 16.2634 8.16029 16.6878 8.62352L16.7892 8.56495C17.522 8.1419 17.773 7.20495 17.35 6.47221C16.9346 5.75269 16.0213 5.49542 15.2914 5.89229L14.5 6.3226Z\"\r\n      />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M3.18731 5.68438C2.44993 5.52604 2.44993 4.47393 3.18731 4.31559L5.3203 3.85755C5.58957 3.79973 5.79991 3.58939 5.85774 3.32012L6.31577 1.18713C6.47411 0.449748 7.52622 0.449751 7.68457 1.18713L8.1426 3.32012C8.20042 3.58939 8.41076 3.79973 8.68003 3.85755L10.813 4.31559C11.5504 4.47393 11.5504 5.52604 10.813 5.68438L8.68003 6.14241C8.41076 6.20024 8.20042 6.41058 8.1426 6.67985L7.68457 8.81284C7.52622 9.55022 6.47411 9.55022 6.31577 8.81284L5.85774 6.67985C5.79991 6.41058 5.58957 6.20024 5.3203 6.14241L3.18731 5.68438Z\" />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M12 2.99998C15.866 2.99998 19 6.13399 19 9.99998C19 13.866 15.866 17 12 17C8.13401 17 5 13.866 5 9.99998C5 9.4477 4.55228 8.99998 4 8.99998C3.44772 8.99998 3 9.4477 3 9.99998C3 12.8894 4.36163 15.4608 6.47822 17.1075L5.58579 18C5.21071 18.3751 5 18.8838 5 19.4142V21.5C5 22.3284 5.67157 23 6.5 23H17.5C18.3284 23 19 22.3284 19 21.5V19.4142C19 18.8838 18.7893 18.3751 18.4142 18L17.5218 17.1075C19.6384 15.4608 21 12.8894 21 9.99998C21 5.02942 16.9706 0.999985 12 0.999985C11.4477 0.999985 11 1.4477 11 1.99998C11 2.55227 11.4477 2.99998 12 2.99998ZM12 19C10.6564 19 9.38156 18.7056 8.23649 18.1777L7 19.4142L7 21H17V19.4142L15.7635 18.1777C14.6184 18.7056 13.3436 19 12 19Z\"\r\n      />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M5.66 4.2L6.05 4.59C6.44 4.97 6.44 5.61 6.05 5.99L6.04 6C5.65 6.39 5.03 6.39 4.64 6L4.25 5.61C3.86 5.23 3.86 4.6 4.25 4.21L4.26 4.2C4.64 3.82 5.27 3.81 5.66 4.2Z\" />\r\n      <path d=\"M1.99 10.95H3.01C3.56 10.95 4 11.39 4 11.95V11.96C4 12.51 3.56 12.95 3 12.94H1.99C1.44 12.94 1 12.5 1 11.95V11.94C1 11.39 1.44 10.95 1.99 10.95Z\" />\r\n      <path d=\"M12 1H12.01C12.56 1 13 1.44 13 1.99V2.96C13 3.51 12.56 3.95 12 3.94H11.99C11.44 3.94 11 3.5 11 2.95V1.99C11 1.44 11.44 1 12 1Z\" />\r\n      <path d=\"M18.34 4.2C18.73 3.82 19.36 3.82 19.75 4.21C20.14 4.6 20.14 5.22 19.75 5.61L19.36 6C18.98 6.39 18.35 6.39 17.96 6L17.95 5.99C17.56 5.61 17.56 4.98 17.95 4.59L18.34 4.2Z\" />\r\n      <path d=\"M18.33 19.7L17.94 19.31C17.55 18.92 17.55 18.3 17.95 17.9C18.33 17.52 18.96 17.51 19.35 17.9L19.74 18.29C20.13 18.68 20.13 19.31 19.74 19.7C19.35 20.09 18.72 20.09 18.33 19.7Z\" />\r\n      <path d=\"M20 11.95V11.94C20 11.39 20.44 10.95 20.99 10.95H22C22.55 10.95 22.99 11.39 22.99 11.94V11.95C22.99 12.5 22.55 12.94 22 12.94H20.99C20.44 12.94 20 12.5 20 11.95Z\" />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M6 11.95C6 8.64 8.69 5.95 12 5.95C15.31 5.95 18 8.64 18 11.95C18 15.26 15.31 17.95 12 17.95C8.69 17.95 6 15.26 6 11.95ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z\"\r\n      />\r\n      <path d=\"M12 22.9H11.99C11.44 22.9 11 22.46 11 21.91V20.95C11 20.4 11.44 19.96 11.99 19.96H12C12.55 19.96 12.99 20.4 12.99 20.95V21.91C12.99 22.46 12.55 22.9 12 22.9Z\" />\r\n      <path d=\"M5.66 19.69C5.27 20.08 4.64 20.08 4.25 19.69C3.86 19.3 3.86 18.68 4.24 18.28L4.63 17.89C5.02 17.5 5.65 17.5 6.04 17.89L6.05 17.9C6.43 18.28 6.44 18.91 6.05 19.3L5.66 19.69Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M19 5H17C17 3.89543 16.1046 3 15 3H9C7.89543 3 7 3.89543 7 5H5C3.9 5 3 5.9 3 7V8C3 10.55 4.92 12.63 7.39 12.94C8.02 14.44 9.37 15.57 11 15.9V19H8C7.44772 19 7 19.4477 7 20C7 20.5523 7.44772 21 8 21H16C16.5523 21 17 20.5523 17 20C17 19.4477 16.5523 19 16 19H13V15.9C14.63 15.57 15.98 14.44 16.61 12.94C19.08 12.63 21 10.55 21 8V7C21 5.9 20.1 5 19 5ZM5 8V7H7V10.82C5.84 10.4 5 9.3 5 8ZM12 14C10.35 14 9 12.65 9 11V5H15V11C15 12.65 13.65 14 12 14ZM19 8C19 9.3 18.16 10.4 17 10.82V7H19V8Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 3C7.02985 3 3 7.02985 3 11.9904C3 16.9606 7.02985 21 12 21C16.9701 21 21 16.9606 21 11.9904C21 7.02985 16.9701 3 12 3ZM16.4328 8.65139C16.3753 9.48614 14.8305 15.7228 14.8305 15.7228C14.8305 15.7228 14.7345 16.0874 14.3987 16.097C14.2836 16.097 14.1301 16.0874 13.9574 15.9243C13.6023 15.6269 12.7964 15.0512 12.0384 14.5235C12.0096 14.5522 11.9808 14.581 11.9424 14.6098C11.7697 14.7633 11.5107 14.984 11.2324 15.2527C11.1269 15.3486 11.0117 15.4542 10.8966 15.5693L10.887 15.5789C10.8198 15.6461 10.7623 15.694 10.7143 15.7324C10.3401 16.0394 10.3017 15.7804 10.3017 15.6461L10.5032 13.4488V13.4296L10.5128 13.4104C10.5224 13.3817 10.5416 13.3721 10.5416 13.3721C10.5416 13.3721 14.4659 9.87953 14.5714 9.50533C14.581 9.48614 14.5522 9.46695 14.5043 9.48614C14.2452 9.57249 9.72601 12.4318 9.22708 12.7484C9.19829 12.7676 9.11194 12.758 9.11194 12.758L6.91471 12.0384C6.91471 12.0384 6.65565 11.9328 6.742 11.693C6.76119 11.645 6.78998 11.597 6.89552 11.5299C7.38486 11.1844 15.8955 8.12367 15.8955 8.12367C15.8955 8.12367 16.1354 8.04691 16.2793 8.09488C16.3465 8.12367 16.3849 8.15245 16.4232 8.2484C16.4328 8.28678 16.4424 8.36354 16.4424 8.44989C16.4424 8.49787 16.4328 8.55544 16.4328 8.65139Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M14.3137 3L15.2631 3.94934C14.5597 5.19866 14.7398 6.81097 15.8032 7.87441C16.8667 8.93786 18.479 9.11792 19.7283 8.4146L20.6777 9.36396L17.6569 12.3848L17.1287 11.8566C16.7382 11.4661 16.105 11.4661 15.7145 11.8566C15.3239 12.2471 15.3239 12.8803 15.7145 13.2708L16.2426 13.799L9.36396 20.6777L8.49923 19.8129C9.71921 18.5286 9.69924 16.4983 8.43932 15.2384C7.1794 13.9784 5.14908 13.9585 3.86473 15.1784L3 14.3137L9.87868 7.43503L10.2145 7.77081C10.605 8.16134 11.2382 8.16134 11.6287 7.77081C12.0192 7.38029 12.0192 6.74713 11.6287 6.3566L11.2929 6.02081L14.3137 3ZM12.8995 1.58579C13.6805 0.804738 14.9469 0.804738 15.7279 1.58579L17.299 3.15684C17.6895 3.54736 17.6895 4.18053 17.299 4.57105L17.2175 4.65257C16.7183 5.15173 16.7183 5.96103 17.2175 6.4602C17.7166 6.95936 18.5259 6.95936 19.0251 6.4602L19.1066 6.37868C19.4971 5.98816 20.1303 5.98816 20.5208 6.37868L22.0919 7.94975C22.8729 8.7308 22.8729 9.99713 22.0919 10.7782L10.7782 22.0919C9.99713 22.8729 8.7308 22.8729 7.94975 22.0919L6.37869 20.5208C5.98817 20.1303 5.98817 19.4971 6.37869 19.1066L7.02511 18.4602C7.52427 17.961 7.52427 17.1517 7.02511 16.6526C6.52594 16.1534 5.71664 16.1534 5.21748 16.6526L4.57106 17.299C4.18054 17.6895 3.54737 17.6895 3.15685 17.299L1.58579 15.7279C0.804738 14.9469 0.804738 13.6805 1.58579 12.8995L12.8995 1.58579ZM13.8787 8.6066C13.4882 8.21608 12.855 8.21608 12.4645 8.6066C12.0739 8.99712 12.0739 9.63029 12.4645 10.0208L13.4645 11.0208C13.855 11.4113 14.4882 11.4113 14.8787 11.0208C15.2692 10.6303 15.2692 9.99713 14.8787 9.6066L13.8787 8.6066Z\"\r\n      />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M18.86 4.86003L21.65 7.65003C21.84 7.84003 21.84 8.16003 21.64 8.35003L18.85 11.14C18.54 11.46 18 11.24 18 10.79V9.00003H4C3.45 9.00003 3 8.55003 3 8.00003C3 7.45003 3.45 7.00003 4 7.00003H18V5.21003C18 4.76003 18.54 4.54003 18.86 4.86003ZM5.14001 19.14L2.35001 16.35C2.16001 16.16 2.16001 15.84 2.36001 15.65L5.15001 12.86C5.46001 12.54 6.00001 12.76 6.00001 13.21V15H20C20.55 15 21 15.45 21 16C21 16.55 20.55 17 20 17H6.00001V18.79C6.00001 19.24 5.46001 19.46 5.14001 19.14Z\"\r\n      />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from \"react\";\r\nimport Svg from \"../../../components/Svg/Svg\";\r\nimport { SvgProps } from \"../../../components/Svg/types\";\r\n\r\nconst Icon: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M8.65854 19C15.4488 19 19.1659 13.2338 19.1659 8.23717C19.1659 8.07728 19.1659 7.91739 19.1561 7.7475C19.878 7.21785 20.5024 6.5483 21 5.78881C20.3366 6.08861 19.6244 6.28847 18.8732 6.38841C19.6341 5.91872 20.2195 5.17921 20.5024 4.28981C19.7902 4.72951 19 5.03931 18.1512 5.20919C17.478 4.45969 16.522 4 15.4585 4C13.4195 4 11.761 5.69887 11.761 7.78747C11.761 8.08728 11.8 8.36709 11.8585 8.6469C8.79512 8.497 6.07317 6.97801 4.24878 4.68954C3.92683 5.25916 3.75122 5.90873 3.75122 6.59827C3.75122 7.90739 4.40488 9.06662 5.39024 9.74617C4.78537 9.72618 4.21951 9.5563 3.72195 9.27648C3.72195 9.28648 3.72195 9.30646 3.72195 9.32645C3.72195 11.1552 5 12.6942 6.67805 13.034C6.36585 13.1239 6.0439 13.1639 5.70244 13.1639C5.46829 13.1639 5.23415 13.1439 5.00976 13.0939C5.47805 14.6029 6.8439 15.6922 8.46341 15.7222C7.19512 16.7415 5.60488 17.3411 3.87805 17.3411C3.58537 17.3411 3.28293 17.3311 3 17.2911C4.62927 18.3704 6.57073 19 8.65854 19Z\" />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","export { default as FarmIcon } from \"./Farm\";\r\nexport { default as GroupsIcon } from \"./Groups\";\r\nexport { default as HamburgerIcon } from \"./Hamburger\";\r\nexport { default as HamburgerCloseIcon } from \"./HamburgerClose\";\r\nexport { default as HomeIcon } from \"./Home\";\r\nexport { default as IfoIcon } from \"./Ifo\";\r\nexport { default as InfoIcon } from \"./Info\";\r\nexport { default as LogoIcon } from \"./Logo\";\r\nexport { default as MoonIcon } from \"./Moon\";\r\nexport { default as MoreIcon } from \"./More\";\r\nexport { default as NftIcon } from \"./Nft\";\r\nexport { default as PoolIcon } from \"./Pool\";\r\nexport { default as PredictionsIcon } from \"./Predictions\";\r\nexport { default as SunIcon } from \"./Sun\";\r\nexport { default as TeamBattleIcon } from \"./TeamBattle\";\r\nexport { default as TelegramIcon } from \"./Telegram\";\r\nexport { default as TicketIcon } from \"./Ticket\";\r\nexport { default as TradeIcon } from \"./Trade\";\r\nexport { default as TwitterIcon } from \"./Twitter\";\r\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React, { useEffect, useState } from \\\"react\\\";\\r\\nimport noop from \\\"lodash/noop\\\";\\r\\nimport { BrowserRouter, Link, MemoryRouter } from \\\"react-router-dom\\\";\\r\\nimport Flex from \\\"../../components/Box/Flex\\\";\\r\\nimport Box from \\\"../../components/Box/Box\\\";\\r\\nimport Heading from \\\"../../components/Heading/Heading\\\";\\r\\nimport Text from \\\"../../components/Text/Text\\\";\\r\\nimport Input from \\\"../../components/Input/Input\\\";\\r\\nimport Button from \\\"../../components/Button/Button\\\";\\r\\nimport { Language } from \\\"./types\\\";\\r\\nimport { links } from \\\"./config\\\";\\r\\nimport { MenuEntry } from \\\"./components/MenuEntry\\\";\\r\\nimport UserMenu from \\\"./components/UserMenu\\\";\\r\\nimport { UserMenuDivider, UserMenuItem } from \\\"./components/UserMenu/styles\\\";\\r\\nimport { variants, Variant } from \\\"./components/UserMenu/types\\\";\\r\\nimport Menu from \\\"./Menu\\\";\\r\\nimport { CogIcon, LanguageCurrencyIcon, LogoutIcon } from \\\"../../components/Svg\\\";\\r\\nimport IconButton from \\\"../../components/Button/IconButton\\\";\\r\\nimport { Modal, ModalProps, useModal } from \\\"../Modal\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"Widgets/Menu\\\",\\r\\n  component: Menu,\\r\\n  argTypes: {},\\r\\n};\\r\\n\\r\\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\\r\\n  code: `en${i}`,\\r\\n  language: `English${i}`,\\r\\n  locale: `Locale${i}`,\\r\\n}));\\r\\n\\r\\nconst UserMenuComponent: React.FC<{ variant?: Variant; text?: string; account?: string }> = ({\\r\\n  variant = variants.DEFAULT,\\r\\n  text,\\r\\n  account = \\\"0x8b017905DC96B38f817473dc885F84D4C76bC113\\\",\\r\\n}) => (\\r\\n  <UserMenu variant={variant} text={text} account={account}>\\r\\n    <UserMenuItem type=\\\"button\\\" onClick={noop}>\\r\\n      Wallet\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem type=\\\"button\\\">Transactions</UserMenuItem>\\r\\n    <UserMenuDivider />\\r\\n    <UserMenuItem type=\\\"button\\\" disabled>\\r\\n      Dashboard\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem type=\\\"button\\\" disabled>\\r\\n      Portfolio\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem as={Link} to=\\\"/profile\\\">\\r\\n      React Router Link\\r\\n    </UserMenuItem>\\r\\n    <UserMenuItem as=\\\"a\\\" href=\\\"https://pancakeswap.finance\\\" target=\\\"_blank\\\">\\r\\n      Link\\r\\n    </UserMenuItem>\\r\\n    <UserMenuDivider />\\r\\n    <UserMenuItem as=\\\"button\\\" onClick={noop}>\\r\\n      <Flex alignItems=\\\"center\\\" justifyContent=\\\"space-between\\\" width=\\\"100%\\\">\\r\\n        Disconnect\\r\\n        <LogoutIcon />\\r\\n      </Flex>\\r\\n    </UserMenuItem>\\r\\n  </UserMenu>\\r\\n);\\r\\n\\r\\nconst GlobalMenuModal: React.FC<ModalProps> = ({ title, onDismiss, ...props }) => (\\r\\n  <Modal title={title} onDismiss={onDismiss} {...props}>\\r\\n    <Heading>{title}</Heading>\\r\\n    <Button>This button Does nothing</Button>\\r\\n  </Modal>\\r\\n);\\r\\n\\r\\nconst GlobalMenuComponent: React.FC = () => {\\r\\n  const [onPresent1] = useModal(<GlobalMenuModal title=\\\"Display Settings Modal\\\" />);\\r\\n  const [onPresent2] = useModal(<GlobalMenuModal title=\\\"Global Settings Modal\\\" />);\\r\\n\\r\\n  return (\\r\\n    <Flex>\\r\\n      <IconButton onClick={onPresent1} variant=\\\"text\\\" scale=\\\"sm\\\" mr=\\\"4px\\\">\\r\\n        <LanguageCurrencyIcon height={22} width={22} color=\\\"textSubtle\\\" />\\r\\n      </IconButton>\\r\\n      <IconButton onClick={onPresent2} variant=\\\"text\\\" scale=\\\"sm\\\" mr=\\\"8px\\\">\\r\\n        <CogIcon height={22} width={22} color=\\\"textSubtle\\\" />\\r\\n      </IconButton>\\r\\n    </Flex>\\r\\n  );\\r\\n};\\r\\n\\r\\n// This hook is used to simulate a props change, and force a re rendering\\r\\nconst useProps = () => {\\r\\n  const [props, setProps] = useState({\\r\\n    account: \\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\",\\r\\n    login: noop,\\r\\n    logout: noop,\\r\\n    isDark: false,\\r\\n    toggleTheme: noop,\\r\\n    langs,\\r\\n    setLang: noop,\\r\\n    currentLang: \\\"EN\\\",\\r\\n    cakePriceUsd: 0.023158668932877668,\\r\\n    links,\\r\\n    profile: null,\\r\\n    userMenu: <UserMenuComponent account=\\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\" />,\\r\\n    globalMenu: <GlobalMenuComponent />,\\r\\n  });\\r\\n\\r\\n  useEffect(() => {\\r\\n    const interval = setInterval(() => {\\r\\n      setProps({\\r\\n        account: \\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\",\\r\\n        login: noop,\\r\\n        logout: noop,\\r\\n        isDark: false,\\r\\n        toggleTheme: noop,\\r\\n        langs,\\r\\n        setLang: noop,\\r\\n        currentLang: \\\"EN\\\",\\r\\n        cakePriceUsd: 0.023158668932877668,\\r\\n        links,\\r\\n        profile: null,\\r\\n        userMenu: <UserMenuComponent account=\\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\" />,\\r\\n        globalMenu: <GlobalMenuComponent />,\\r\\n      });\\r\\n    }, 2000);\\r\\n    return () => {\\r\\n      clearInterval(interval);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  return props;\\r\\n};\\r\\n\\r\\nexport const Connected: React.FC = () => {\\r\\n  const props = useProps();\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu {...props}>\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Page body\\r\\n          </Heading>\\r\\n          <Text as=\\\"p\\\">\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\r\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\r\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\r\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\r\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\r\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\r\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\r\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\r\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\r\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\r\\n            exercitation ullamco laboris nisi ut\\r\\n          </Text>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const NotConnected: React.FC = () => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>Page body</h1>\\r\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\r\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\r\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\r\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\r\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\r\\n          mollit anim id est laborum.\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const WithoutConnectButton: React.FC = () => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>No connect button on top</h1>\\r\\n          This variant is needed for info site\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const MenuEntryComponent: React.FC = () => {\\r\\n  return (\\r\\n    <Flex justifyContent=\\\"space-between\\\" p=\\\"16px\\\" style={{ backgroundColor: \\\"wheat\\\" }}>\\r\\n      <MenuEntry>Default</MenuEntry>\\r\\n      <MenuEntry secondary>Secondary</MenuEntry>\\r\\n      <MenuEntry isActive>isActive</MenuEntry>\\r\\n    </Flex>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const WithSubmenuSelected: React.FC = () => {\\r\\n  return (\\r\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\r\\n      <Menu\\r\\n        isDark={false}\\r\\n        toggleTheme={noop}\\r\\n        langs={langs}\\r\\n        setLang={noop}\\r\\n        currentLang=\\\"EN\\\"\\r\\n        cakePriceUsd={0.23158668932877668}\\r\\n        links={links}\\r\\n      >\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Submenu leaderboard selected\\r\\n          </Heading>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </MemoryRouter>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const UserMenuWithVariants: React.FC = () => {\\r\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\r\\n  const [text, setText] = useState(undefined);\\r\\n\\r\\n  const handleChange = (evt) => {\\r\\n    const { value } = evt.target;\\r\\n    setText(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Box p=\\\"40px\\\">\\r\\n        <Flex justifyContent=\\\"space-between\\\">\\r\\n          <Box>\\r\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\r\\n              Variants\\r\\n            </Heading>\\r\\n            <Flex mb=\\\"16px\\\">\\r\\n              {Object.keys(variants).map((variantKey) => (\\r\\n                <Button\\r\\n                  scale=\\\"sm\\\"\\r\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\r\\n                  ml=\\\"8px\\\"\\r\\n                  onClick={() => setVariant(variants[variantKey])}\\r\\n                >\\r\\n                  {variants[variantKey].toUpperCase()}\\r\\n                </Button>\\r\\n              ))}\\r\\n            </Flex>\\r\\n            <Box py=\\\"8px\\\">\\r\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\r\\n            </Box>\\r\\n          </Box>\\r\\n          <UserMenuComponent variant={variant} text={text} />\\r\\n        </Flex>\\r\\n      </Box>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Connected\":{\"startLoc\":{\"col\":35,\"line\":133},\"endLoc\":{\"col\":1,\"line\":159},\"startBody\":{\"col\":35,\"line\":133},\"endBody\":{\"col\":1,\"line\":159}},\"NotConnected\":{\"startLoc\":{\"col\":38,\"line\":161},\"endLoc\":{\"col\":1,\"line\":180},\"startBody\":{\"col\":38,\"line\":161},\"endBody\":{\"col\":1,\"line\":180}},\"WithoutConnectButton\":{\"startLoc\":{\"col\":46,\"line\":182},\"endLoc\":{\"col\":1,\"line\":193},\"startBody\":{\"col\":46,\"line\":182},\"endBody\":{\"col\":1,\"line\":193}},\"MenuEntryComponent\":{\"startLoc\":{\"col\":44,\"line\":195},\"endLoc\":{\"col\":1,\"line\":203},\"startBody\":{\"col\":44,\"line\":195},\"endBody\":{\"col\":1,\"line\":203}},\"WithSubmenuSelected\":{\"startLoc\":{\"col\":45,\"line\":205},\"endLoc\":{\"col\":1,\"line\":225},\"startBody\":{\"col\":45,\"line\":205},\"endBody\":{\"col\":1,\"line\":225}},\"UserMenuWithVariants\":{\"startLoc\":{\"col\":46,\"line\":227},\"endLoc\":{\"col\":1,\"line\":265},\"startBody\":{\"col\":46,\"line\":227},\"endBody\":{\"col\":1,\"line\":265}}};\n    \nimport React, { useEffect, useState } from \"react\";\r\nimport noop from \"lodash/noop\";\r\nimport { BrowserRouter, Link, MemoryRouter } from \"react-router-dom\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport Box from \"../../components/Box/Box\";\r\nimport Heading from \"../../components/Heading/Heading\";\r\nimport Text from \"../../components/Text/Text\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { Language } from \"./types\";\r\nimport { links } from \"./config\";\r\nimport { MenuEntry } from \"./components/MenuEntry\";\r\nimport UserMenu from \"./components/UserMenu\";\r\nimport { UserMenuDivider, UserMenuItem } from \"./components/UserMenu/styles\";\r\nimport { variants, Variant } from \"./components/UserMenu/types\";\r\nimport Menu from \"./Menu\";\r\nimport { CogIcon, LanguageCurrencyIcon, LogoutIcon } from \"../../components/Svg\";\r\nimport IconButton from \"../../components/Button/IconButton\";\r\nimport { Modal, ModalProps, useModal } from \"../Modal\";\r\n\r\nexport default {\r\n  title: \"Widgets/Menu\",\r\n  component: Menu,\r\n  argTypes: {},\r\n};\r\n\r\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\r\n  code: `en${i}`,\r\n  language: `English${i}`,\r\n  locale: `Locale${i}`,\r\n}));\r\n\r\nconst UserMenuComponent: React.FC<{ variant?: Variant; text?: string; account?: string }> = ({\r\n  variant = variants.DEFAULT,\r\n  text,\r\n  account = \"0x8b017905DC96B38f817473dc885F84D4C76bC113\",\r\n}) => (\r\n  <UserMenu variant={variant} text={text} account={account}>\r\n    <UserMenuItem type=\"button\" onClick={noop}>\r\n      Wallet\r\n    </UserMenuItem>\r\n    <UserMenuItem type=\"button\">Transactions</UserMenuItem>\r\n    <UserMenuDivider />\r\n    <UserMenuItem type=\"button\" disabled>\r\n      Dashboard\r\n    </UserMenuItem>\r\n    <UserMenuItem type=\"button\" disabled>\r\n      Portfolio\r\n    </UserMenuItem>\r\n    <UserMenuItem as={Link} to=\"/profile\">\r\n      React Router Link\r\n    </UserMenuItem>\r\n    <UserMenuItem as=\"a\" href=\"https://pancakeswap.finance\" target=\"_blank\">\r\n      Link\r\n    </UserMenuItem>\r\n    <UserMenuDivider />\r\n    <UserMenuItem as=\"button\" onClick={noop}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n        Disconnect\r\n        <LogoutIcon />\r\n      </Flex>\r\n    </UserMenuItem>\r\n  </UserMenu>\r\n);\r\n\r\nconst GlobalMenuModal: React.FC<ModalProps> = ({ title, onDismiss, ...props }) => (\r\n  <Modal title={title} onDismiss={onDismiss} {...props}>\r\n    <Heading>{title}</Heading>\r\n    <Button>This button Does nothing</Button>\r\n  </Modal>\r\n);\r\n\r\nconst GlobalMenuComponent: React.FC = () => {\r\n  const [onPresent1] = useModal(<GlobalMenuModal title=\"Display Settings Modal\" />);\r\n  const [onPresent2] = useModal(<GlobalMenuModal title=\"Global Settings Modal\" />);\r\n\r\n  return (\r\n    <Flex>\r\n      <IconButton onClick={onPresent1} variant=\"text\" scale=\"sm\" mr=\"4px\">\r\n        <LanguageCurrencyIcon height={22} width={22} color=\"textSubtle\" />\r\n      </IconButton>\r\n      <IconButton onClick={onPresent2} variant=\"text\" scale=\"sm\" mr=\"8px\">\r\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\r\n      </IconButton>\r\n    </Flex>\r\n  );\r\n};\r\n\r\n// This hook is used to simulate a props change, and force a re rendering\r\nconst useProps = () => {\r\n  const [props, setProps] = useState({\r\n    account: \"0xbdda50183d817c3289f895a4472eb475967dc980\",\r\n    login: noop,\r\n    logout: noop,\r\n    isDark: false,\r\n    toggleTheme: noop,\r\n    langs,\r\n    setLang: noop,\r\n    currentLang: \"EN\",\r\n    cakePriceUsd: 0.023158668932877668,\r\n    links,\r\n    profile: null,\r\n    userMenu: <UserMenuComponent account=\"0xbdda50183d817c3289f895a4472eb475967dc980\" />,\r\n    globalMenu: <GlobalMenuComponent />,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setProps({\r\n        account: \"0xbdda50183d817c3289f895a4472eb475967dc980\",\r\n        login: noop,\r\n        logout: noop,\r\n        isDark: false,\r\n        toggleTheme: noop,\r\n        langs,\r\n        setLang: noop,\r\n        currentLang: \"EN\",\r\n        cakePriceUsd: 0.023158668932877668,\r\n        links,\r\n        profile: null,\r\n        userMenu: <UserMenuComponent account=\"0xbdda50183d817c3289f895a4472eb475967dc980\" />,\r\n        globalMenu: <GlobalMenuComponent />,\r\n      });\r\n    }, 2000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return props;\r\n};\r\n\r\nexport const Connected: React.FC = () => {\r\n  const props = useProps();\r\n  return (\r\n    <BrowserRouter>\r\n      <Menu {...props}>\r\n        <div>\r\n          <Heading as=\"h1\" mb=\"8px\">\r\n            Page body\r\n          </Heading>\r\n          <Text as=\"p\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\r\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\r\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\r\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\r\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\r\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\r\n            exercitation ullamco laboris nisi ut\r\n          </Text>\r\n        </div>\r\n      </Menu>\r\n    </BrowserRouter>\r\n  );\r\n};;\r\n\r\nexport const NotConnected: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\"EN\" links={links}>\r\n        <div>\r\n          <h1>Page body</h1>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\r\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\r\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\r\n          mollit anim id est laborum.\r\n        </div>\r\n      </Menu>\r\n    </BrowserRouter>\r\n  );\r\n};;\r\n\r\nexport const WithoutConnectButton: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\"EN\" links={links}>\r\n        <div>\r\n          <h1>No connect button on top</h1>\r\n          This variant is needed for info site\r\n        </div>\r\n      </Menu>\r\n    </BrowserRouter>\r\n  );\r\n};;\r\n\r\nexport const MenuEntryComponent: React.FC = () => {\r\n  return (\r\n    <Flex justifyContent=\"space-between\" p=\"16px\" style={{ backgroundColor: \"wheat\" }}>\r\n      <MenuEntry>Default</MenuEntry>\r\n      <MenuEntry secondary>Secondary</MenuEntry>\r\n      <MenuEntry isActive>isActive</MenuEntry>\r\n    </Flex>\r\n  );\r\n};;\r\n\r\nexport const WithSubmenuSelected: React.FC = () => {\r\n  return (\r\n    <MemoryRouter initialEntries={[\"/teams\"]}>\r\n      <Menu\r\n        isDark={false}\r\n        toggleTheme={noop}\r\n        langs={langs}\r\n        setLang={noop}\r\n        currentLang=\"EN\"\r\n        cakePriceUsd={0.23158668932877668}\r\n        links={links}\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" mb=\"8px\">\r\n            Submenu leaderboard selected\r\n          </Heading>\r\n        </div>\r\n      </Menu>\r\n    </MemoryRouter>\r\n  );\r\n};;\r\n\r\nexport const UserMenuWithVariants: React.FC = () => {\r\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\r\n  const [text, setText] = useState(undefined);\r\n\r\n  const handleChange = (evt) => {\r\n    const { value } = evt.target;\r\n    setText(value);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Box p=\"40px\">\r\n        <Flex justifyContent=\"space-between\">\r\n          <Box>\r\n            <Heading size=\"sm\" mb=\"16px\">\r\n              Variants\r\n            </Heading>\r\n            <Flex mb=\"16px\">\r\n              {Object.keys(variants).map((variantKey) => (\r\n                <Button\r\n                  scale=\"sm\"\r\n                  variant={variant === variants[variantKey] ? \"primary\" : \"text\"}\r\n                  ml=\"8px\"\r\n                  onClick={() => setVariant(variants[variantKey])}\r\n                >\r\n                  {variants[variantKey].toUpperCase()}\r\n                </Button>\r\n              ))}\r\n            </Flex>\r\n            <Box py=\"8px\">\r\n              <Input value={text} onChange={handleChange} placeholder=\"Custom Text...\" />\r\n            </Box>\r\n          </Box>\r\n          <UserMenuComponent variant={variant} text={text} />\r\n        </Flex>\r\n      </Box>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\n\n\nConnected.parameters = { storySource: { source: \"() => {\\r\\n  const props = useProps();\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu {...props}>\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Page body\\r\\n          </Heading>\\r\\n          <Text as=\\\"p\\\">\\r\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\r\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\r\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\r\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\r\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\r\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\r\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\r\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\r\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\r\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\r\\n            exercitation ullamco laboris nisi ut\\r\\n          </Text>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...Connected.parameters };\nNotConnected.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>Page body</h1>\\r\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\r\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\r\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\r\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\r\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\r\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\r\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\r\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\r\\n          mollit anim id est laborum.\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...NotConnected.parameters };\nWithoutConnectButton.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Menu isDark={false} toggleTheme={noop} langs={langs} setLang={noop} currentLang=\\\"EN\\\" links={links}>\\r\\n        <div>\\r\\n          <h1>No connect button on top</h1>\\r\\n          This variant is needed for info site\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...WithoutConnectButton.parameters };\nMenuEntryComponent.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <Flex justifyContent=\\\"space-between\\\" p=\\\"16px\\\" style={{ backgroundColor: \\\"wheat\\\" }}>\\r\\n      <MenuEntry>Default</MenuEntry>\\r\\n      <MenuEntry secondary>Secondary</MenuEntry>\\r\\n      <MenuEntry isActive>isActive</MenuEntry>\\r\\n    </Flex>\\r\\n  );\\r\\n}\" }, ...MenuEntryComponent.parameters };\nWithSubmenuSelected.parameters = { storySource: { source: \"() => {\\r\\n  return (\\r\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\r\\n      <Menu\\r\\n        isDark={false}\\r\\n        toggleTheme={noop}\\r\\n        langs={langs}\\r\\n        setLang={noop}\\r\\n        currentLang=\\\"EN\\\"\\r\\n        cakePriceUsd={0.23158668932877668}\\r\\n        links={links}\\r\\n      >\\r\\n        <div>\\r\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\r\\n            Submenu leaderboard selected\\r\\n          </Heading>\\r\\n        </div>\\r\\n      </Menu>\\r\\n    </MemoryRouter>\\r\\n  );\\r\\n}\" }, ...WithSubmenuSelected.parameters };\nUserMenuWithVariants.parameters = { storySource: { source: \"() => {\\r\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\r\\n  const [text, setText] = useState(undefined);\\r\\n\\r\\n  const handleChange = (evt) => {\\r\\n    const { value } = evt.target;\\r\\n    setText(value);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <BrowserRouter>\\r\\n      <Box p=\\\"40px\\\">\\r\\n        <Flex justifyContent=\\\"space-between\\\">\\r\\n          <Box>\\r\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\r\\n              Variants\\r\\n            </Heading>\\r\\n            <Flex mb=\\\"16px\\\">\\r\\n              {Object.keys(variants).map((variantKey) => (\\r\\n                <Button\\r\\n                  scale=\\\"sm\\\"\\r\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\r\\n                  ml=\\\"8px\\\"\\r\\n                  onClick={() => setVariant(variants[variantKey])}\\r\\n                >\\r\\n                  {variants[variantKey].toUpperCase()}\\r\\n                </Button>\\r\\n              ))}\\r\\n            </Flex>\\r\\n            <Box py=\\\"8px\\\">\\r\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\r\\n            </Box>\\r\\n          </Box>\\r\\n          <UserMenuComponent variant={variant} text={text} />\\r\\n        </Flex>\\r\\n      </Box>\\r\\n    </BrowserRouter>\\r\\n  );\\r\\n}\" }, ...UserMenuWithVariants.parameters };","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../../components/Box/Flex\";\r\nimport { Box } from \"../../components/Box\";\r\nimport { ArrowBackIcon, CloseIcon } from \"../../components/Svg\";\r\nimport { IconButton } from \"../../components/Button\";\r\nimport { ModalProps } from \"./types\";\r\n\r\nexport const ModalHeader = styled.div<{ background?: string }>`\r\n  align-items: center;\r\n  background: ${({ background }) => background || \"transparent\"};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  display: flex;\r\n  padding: 12px 24px;\r\n`;\r\n\r\nexport const ModalTitle = styled(Flex)`\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport const ModalBody = styled(Flex)`\r\n  flex-direction: column;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const ModalCloseButton: React.FC<{ onDismiss: ModalProps[\"onDismiss\"] }> = ({ onDismiss }) => {\r\n  return (\r\n    <IconButton variant=\"text\" onClick={onDismiss} aria-label=\"Close the dialog\">\r\n      <CloseIcon color=\"primary\" />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const ModalBackButton: React.FC<{ onBack: ModalProps[\"onBack\"] }> = ({ onBack }) => {\r\n  return (\r\n    <IconButton variant=\"text\" onClick={onBack} area-label=\"go back\" mr=\"8px\">\r\n      <ArrowBackIcon color=\"primary\" />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport const ModalContainer = styled(Box)<{ minWidth: string }>`\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.modal.background};\r\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 32px;\r\n  width: 100%;\r\n  max-height: 100vh;\r\n  z-index: ${({ theme }) => theme.zIndices.modal};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: auto;\r\n    min-width: ${({ minWidth }) => minWidth};\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Text from \"../../components/Text/Text\";\r\nimport { CopyIcon } from \"../../components/Svg\";\r\n\r\ninterface Props {\r\n  toCopy: string;\r\n}\r\n\r\nconst StyleButton = styled(Text).attrs({ role: \"button\" })`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`;\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? \"block\" : \"none\")};\r\n  position: absolute;\r\n  bottom: -22px;\r\n  right: 0;\r\n  left: 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.contrast};\r\n  color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, children, ...props }) => {\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false);\r\n\r\n  const copyToClipboardWithCommand = (content: string) => {\r\n    const el = document.createElement(\"textarea\");\r\n    el.value = content;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(el);\r\n  };\r\n\r\n  function displayTooltip() {\r\n    setIsTooltipDisplayed(true);\r\n    setTimeout(() => {\r\n      setIsTooltipDisplayed(false);\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <StyleButton\r\n      small\r\n      bold\r\n      onClick={() => {\r\n        if (navigator.clipboard && navigator.permissions) {\r\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip());\r\n        } else if (document.queryCommandSupported(\"copy\")) {\r\n          copyToClipboardWithCommand(toCopy);\r\n          displayTooltip();\r\n        }\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <CopyIcon width=\"20px\" color=\"primary\" ml=\"4px\" />\r\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\r\n    </StyleButton>\r\n  );\r\n};\r\n\r\nexport default CopyToClipboard;\r\n"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAWA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AATA;AAeA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AARA;AAeA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AAfA;AAkBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAuBA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AARA;AAeA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAhBA;AAwBA;AAEA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AApDA;AA2DA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AClNA;AACA;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAKA;AAAA;AAZA;AAeA;AACA;AAlBA;AAmBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAFA;AASA;AACA;AAZA;AAaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AAXA;AAYA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAFA;AASA;AACA;AAZA;AAaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAFA;AASA;AACA;AAZA;AAaA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAbA;AAgBA;AACA;AAnBA;AAoBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AAXA;AAYA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AAXA;AAYA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChnBA;AALA;AACA;AADA;AACA;AAgCA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AADA;AACA;AADA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAJA;AASA;AACA;AAfA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAJA;AADA;AADA;AAuBA;AA1BA;AA0BA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AADA;AADA;AADA;AAiBA;AAnBA;AAmBA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AADA;AADA;AADA;AASA;AAXA;AAWA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AARA;AAQA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AADA;AATA;AADA;AAkBA;AApBA;AAoBA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AADA;AADA;AAYA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAhBA;AAoBA;AAAA;AAAA;AArBA;AADA;AADA;AA4BA;AAtCA;AA0CA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AANA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AANA;AAQA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAfA;AAkBA;AACA;AAvCA;AAwCA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}