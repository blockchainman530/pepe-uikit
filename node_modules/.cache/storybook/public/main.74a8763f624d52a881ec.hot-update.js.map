{"version":3,"file":"main.74a8763f624d52a881ec.hot-update.js","sources":["webpack:///./src/widgets/Menu/components/Logo.tsx"],"sourcesContent":["import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LogoIcon } from \"../../../components/Svg\";\r\nimport Flex from \"../../../components/Box/Flex\";\r\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"../icons\";\r\nimport MenuButton from \"./MenuButton\";\r\n\r\ninterface Props {\r\n  isPushed: boolean;\r\n  isDark: boolean;\r\n  togglePush: () => void;\r\n  href: string;\r\n}\r\n\r\nconst blink = keyframes`\r\n  0%,  100% { transform: scaleY(1); } \r\n  50% { transform:  scaleY(0.1); } \r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  .mobile-icon {\r\n    width: 32px;\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: none;\r\n    }\r\n  }\r\n  .desktop-icon {\r\n    width: 160px;\r\n    display: none;\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: block;\r\n    }\r\n  }\r\n  .right-eye {\r\n    animation-delay: 20ms;\r\n  }\r\n  &:hover {\r\n    .left-eye,\r\n    .right-eye {\r\n      transform-origin: center 60%;\r\n      animation-name: ${blink};\r\n      animation-duration: 350ms;\r\n      animation-iteration-count: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Logo: React.FC<Props> = ({ isPushed, togglePush, isDark, href }) => {\r\n  const isAbsoluteUrl = href.startsWith(\"http\");\r\n  const innerLogo = (\r\n    <>\r\n      <LogoIcon className=\"mobile-icon\" />\r\n      <LogoWithText className=\"desktop-icon\" isDark={isDark} />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Flex>\r\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush} mr=\"24px\">\r\n        {isPushed ? (\r\n          <HamburgerCloseIcon width=\"24px\" color=\"textSubtle\" />\r\n        ) : (\r\n          <HamburgerIcon width=\"24px\" color=\"textSubtle\" />\r\n        )}\r\n      </MenuButton>\r\n      {isAbsoluteUrl ? (\r\n        <StyledLink as=\"a\" href={href} aria-label=\"Pancake home page\">\r\n          {innerLogo}\r\n        </StyledLink>\r\n      ) : (\r\n        <StyledLink to={href} aria-label=\"Pancake home page\">\r\n          {innerLogo}\r\n        </StyledLink>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AASA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAbA;AAmBA;AACA;AA9BA;AA+BA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}